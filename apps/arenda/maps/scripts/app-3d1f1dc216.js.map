{"version":3,"names":[],"mappings":"","sources":["scripts/app.js"],"sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('app', [\n      'ngCordova',\n      'ngAnimate', \n      'ngCookies',  \n      'ngSanitize', \n      'ngMessages', \n      'ngAria', \n      'ui.router', \n      'ngMaterial', \n      'toastr', \n      'LocalStorageModule', \n      'ngFileUpload',\n      'textAngular',\n      'ui.tinymce'\n  ]);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('app')\n    .config(config);\n\n  /** @ngInject */\n  function config($mdDateLocaleProvider, moment) {\n// Example of a French localization.\n\n    $mdDateLocaleProvider.shortDays = ['Du', 'Lu', 'Ma', 'Mi', 'Jo', 'Vi', 'Sa'];\n    $mdDateLocaleProvider.firstDayOfWeek = 1;\n\n    $mdDateLocaleProvider.parseDate = function(dateString) {\n      var m = moment(dateString, 'L', true);\n      return m.isValid() ? m.toDate() : new Date(NaN);\n    };\n\n    $mdDateLocaleProvider.formatDate = function(date) {\n       return moment(date).format('DD.MM.YYYY');\n    }; \n      \n    $mdDateLocaleProvider.weekNumberFormatter = function(weekNumber) {\n      return 'Săptămâna ' + weekNumber;\n    };      \n      \n    $mdDateLocaleProvider.msgCalendar = 'Calendar';\n    $mdDateLocaleProvider.msgOpenCalendar = 'Deschide calendarul';      \n      \n}  \n\n  \n\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .config(config);\n\n    /** @ngInject */\n    function config($httpProvider, $logProvider, toastrConfig, $mdThemingProvider, $mdIconProvider, $rootScopeProvider, localStorageServiceProvider) {\n        // Enable log\n        $logProvider.debugEnabled(true);\n\n        toastrConfig.allowHtml = true;\n        toastrConfig.timeOut = 0;\n        toastrConfig.positionClass = 'toast-top-right';\n        toastrConfig.preventDuplicates = true;\n        toastrConfig.progressBar = true;\n\n        // overpass the digest limit for json rendering\n        $rootScopeProvider.digestTtl(10);\n\n        localStorageServiceProvider.setPrefix('ctr');\n        /*\n            $mdThemingProvider\n                .theme('default')\n                .primaryPalette('indigo')\n                .accentPalette('pink')\n                .warnPalette('red')\n                .backgroundPalette('blue');*/\n\n\n\n\n\n        var customGreyMap = $mdThemingProvider.extendPalette('deep-purple', {\n            'contrastDefaultColor': 'dark',\n            'contrastDarkColors': ['50'],\n            '50': 'ffffff'\n        });\n\n        $mdThemingProvider.definePalette('customBlue', customGreyMap);\n        $mdThemingProvider.theme('default')\n            .primaryPalette('customBlue', {\n                'default': '500',\n                'hue-1': '50'\n            })\n            .accentPalette('indigo');\n        $mdThemingProvider.theme('input', 'default')\n            .primaryPalette('grey')\n\n\n\n\n        $mdIconProvider\n            // linking to https://github.com/google/material-design-icons/tree/master/sprites/svg-sprite\n            // \n            .iconSet('action', 'assets/svg/svg-sprite-action.svg', 24)\n            .iconSet('alert', 'assets/svg/svg-sprite-alert.svg', 24)\n            .iconSet('av', 'assets/svg/svg-sprite-av.svg', 24)\n            .iconSet('communication', 'assets/svg/svg-sprite-communication.svg', 24)\n            .iconSet('content', 'assets/svg/svg-sprite-content.svg', 24)\n            .iconSet('device', 'assets/svg/svg-sprite-device.svg', 24)\n            .iconSet('editor', 'assets/svg/svg-sprite-editor.svg', 24)\n            .iconSet('file', 'assets/svg/svg-sprite-file.svg', 24)\n            .iconSet('hardware', 'assets/svg/svg-sprite-hardware.svg', 24)\n            .iconSet('image', 'assets/svg/svg-sprite-image.svg', 24)\n            .iconSet('maps', 'assets/svg/svg-sprite-maps.svg', 24)\n            .iconSet('navigation', 'assets/svg/svg-sprite-navigation.svg', 24)\n            .iconSet('notification', 'assets/svg/svg-sprite-notification.svg', 24)\n            .iconSet('social', 'assets/svg/svg-sprite-social.svg', 24)\n            .iconSet('toggle', 'assets/svg/svg-sprite-toggle.svg', 24)\n            .iconSet('my', 'assets/svg/_my_collection.svg', 24)\n\n            // Illustrated user icons used in the docs https://material.angularjs.org/latest/#/demo/material.components.gridList\n            .iconSet('avatars', 'assets/svg/avatar-icons.svg', 24)\n            .defaultIconSet('assets/svg/svg-sprite-action.svg', 24);\n\n\n        $httpProvider\n            .interceptors.push(\n                function (localStorageService, $q, $window) {\n                    return {\n                        request: function (config) {\n                            config.headers = config.headers || {};\n                            config.headers.Authorization = localStorageService.get('apikey');\n                            return config || $q.when(config);\n                        },\n                        responseError: function (response) {\n\n                            if (response) {\n                                if (response.status == 401) {\n                                    localStorageService.remove('apikey');\n                                    localStorageService.remove('user');\n                                    localStorageService.remove('uid');\n                                    $window.location = '#!/login';\n                                    return response;\n                                    //make the user login again\n                                } else if (response.status == 404) {\n                                    /*                            localStorageService.remove('apikey');\n                                                                localStorageService.remove('user');\n                                                                localStorageService.remove('company');   */\n                                    $window.location = '#/exception/404';\n                                }\n                                if (response.status == 403) {\n                                    localStorageService.remove('apikey');\n                                    localStorageService.remove('user');\n                                    localStorageService.remove('uid');\n                                    $window.location = '#/exception/403';\n                                }\n\n                            }\n                            return $q.reject(response);\n                        }\n                    }\n                })\n\n\n    }\n\n\n\n})();\n/* global moment:false */\n\n(function() {\n  'use strict';\n\nvar appData = {\n    name: \"CONTRACTE DE ARENDARE\",\n    version: \" CTR ver. 2.0\",\n    app: \"CTR\",\n\n    api: \"https://api-arenda.de4.undevreau.eu/\"\n//    api: \"http://localhost:3300/\"\n};\n\n  angular\n    .module('app')\n    .constant('APP',  appData)\n    .constant('moment', moment);\n\n\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .config(routerConfig);\n\n    /** @ngInject */\n    function routerConfig( $urlRouterProvider) {\n\n  \n\n\n\n        $urlRouterProvider.otherwise('/');\n    }\n\n})();\n(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .run(cordovaInit)\n        .run(runBlock);\n\n    /** @ngInject */\n    function runBlock($log, $rootScope, $q) {\n\n        $log.debug('runBlock end');\n            $rootScope\n        .$on('$stateChangeStart', \n            // function(event, toState, toParams, fromState, fromParams){ \n            function() {\n                angular.element(\"#ui-view\").html(\"\");\n                angular.element(\".page-loading\").removeClass(\"hidden\");\n        });\n\n        $rootScope\n            .$on('$stateChangeSuccess',\n             //   function(event, toState, toParams, fromState, fromParams){ \n                  function() {  angular.element(\".page-loading\").addClass(\"hidden\");\n            });\n        \n//        window[\"Promise\"] = $q;\n\n    }\n\n\n\n    function cordovaInit($window, $document, $log) {\n        \n        return function (done) {\n            if ($window.cordova) {\n                $log.info('cordova loaded');\n                $document.addEventListener('deviceready', function () {\n                    done();\n                }, false);\n            } else {\n                $log.info('no cordova env. detected!');\n                done();\n            }\n        }\n\n    }\n\n\n})();\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .filter('cauta', cauta);\r\n\r\n\r\n\r\n    /** @ngInject */\r\n\r\n    function cauta() {\r\n        return function (elem, array, searchAttr, targetAttr, targetValue) {\r\n        var result;\r\n          angular.forEach( array, (e) => {\r\n              if ( angular.isObject(elem)) {\r\n                  \r\n                  if ( elem[searchAttr] == e[targetAttr] ) {\r\n                      targetValue == \"data\" ?  result =  e[targetValue]*1000 : result = e[targetValue];\r\n                    \r\n                  }\r\n              }\r\n          })\r\n            return result;\r\n        }\r\n    }\r\n    \r\n})();\n(function () {\r\n    'use strict';\r\n\r\nangular\r\n\t.module('app')\r\n\t.factory('ngCopy', ngCopy)\r\n    .directive('ngClickCopy', ngClickCopy);\r\n    \r\n    function ngCopy($window) {\r\n        var body = angular.element($window.document.body);\r\n            var textarea = angular.element('<input>');\r\n            textarea.css({\r\n                position: 'fixed',\r\n                opacity: '0'\r\n            });\r\n\r\n            return function (toCopy) {\r\n                textarea.val(toCopy);\r\n                body.append(textarea);\r\n                textarea[0].select();\r\n\r\n                try {\r\n                    var successful = document.execCommand('copy');\r\n                    if (!successful) throw successful;\r\n                } catch (err) {\r\n                    window.prompt(\"Copy to clipboard: Ctrl+C, Enter\", toCopy);\r\n                }\r\n\r\n                textarea.remove();\r\n            }\r\n    }\r\n\t \r\n        \r\n        function ngClickCopy() {\r\n            return {\r\n                restrict: 'A',\r\n                link: function (scope, element, attrs) {\r\n                    element.bind('click', function () {\r\n                        ngCopy(attrs.ngClickCopy);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    \r\n\t\r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('app')\r\n        .directive(\"formOnChange\", function ($parse) {\r\n            return {\r\n                require: \"form\",\r\n                link: function (scope, element, attrs) {\r\n                    var cb = $parse(attrs.formOnChange);\r\n                    element.on(\"change\", function () {\r\n                        cb(scope);\r\n                    });\r\n                }\r\n            }\r\n        });\r\n\r\n})();\n(function () {\r\n    'use strict';\r\n    \r\n    angular.module('app')\r\n        .directive('ngPrint', printDirective );\r\n    \r\n    \r\n    function printDirective() {\r\n        var printSection = document.getElementById('printSection');\r\n/*        if (printSection != null) {\r\n            printSection.remove();\r\n        }*/\r\n\r\n        // if there is no printing section, create one\r\n\r\n        printSection = document.createElement( 'div' );\r\n        printSection.id = 'printSection';\r\n        document.body.appendChild( printSection );\r\n        \r\n        \r\n\r\n        function link(scope, element, attrs) {\r\n            element.on('click', function () {\r\n               \r\n                var elemToPrint = document.getElementById(attrs.printElementId);\r\n                 \r\n                if (elemToPrint) {\r\n                  \r\n                    printElement(elemToPrint);\r\n                }\r\n            });\r\n\r\n        }\r\n        function printElement(elem) {\r\n            // clones the element you want to print\r\n            var domClone = elem.cloneNode(true);\r\n            printSection.appendChild(domClone);\r\n//        \r\n            window.print();\r\n            printSection.innerHTML = '';\r\n            \r\n        }\r\n        return {\r\n            link: link,\r\n            restrict: 'A'\r\n        };\r\n    }\r\n    \r\n}());\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .filter('inLitere', inLitere);\r\n\r\n\r\n\r\n    /** @ngInject */\r\n\r\n    function inLitere() {\r\n        return function (item) {\r\n            return smarty_modifier_transf(item);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    function smarty_modifier_transf(item) {\r\n        var bnr = item.split(\",\");\r\n        var cstr = \"\";\r\n        for (var i = 0; i < bnr.length; i++) {\r\n            item = bnr[i].replace([\",\", \".\"], \"\");\r\n            var sute = \"\",\r\n                zeci = \"\",\r\n                uni = \"\";\r\n            var un = [\"miliard \", \"miliarde \", \"milion \", \"milioane \", \"mie \", \"mii \", \"\", \"\"];\r\n            var sir = \"\";\r\n            var s = \"1\";\r\n            var num = 4;\r\n\r\n            while (s != \"\") {\r\n                s = item.slice(-3);\r\n\r\n                if (s == \"\") break;\r\n                item = (item.length - 3 > 0) ? item.slice(0, item.length - 3) : \"\";\r\n                var ss = \"\";\r\n                if (s != \"\") {\r\n                    switch (s, s.length) {\r\n                        case 3:\r\n                           \r\n                            sute = s.slice(1, 1);\r\n                            \r\n                            zeci = s.slice(1, 1);\r\n                            \r\n                            uni = s.slice(2, 1);\r\n                            \r\n                            ss = numar(sute, 1) + ((sute == 1) ? \"suta \" : ((sute > 1) ? \" sute \" : \"\"));\r\n                            if (zeci == 1 && uni != 0)\r\n                                ss = ss.numar(uni, 4) + \"sprezece \" + un[num * 2];\r\n                            else if (zeci == 1 && uni == 0)\r\n                                ss = \"zece \" + un[num * 2];\r\n                            else {\r\n                                ss = ss + numar(zeci, 2) + ((zeci != 0) ? \"zeci \" : \"\") + ((uni != \"0\") ? \"si \" + numar(uni, 3) : \"\") + ((s != \"000\") ? un[num * 2 - 1] : \"\");\r\n                            }\r\n                            sir = ss + sir;\r\n                            break;\r\n                        case 2:\r\n                            sute = 0;\r\n                            zeci = s.slice(0, 1);\r\n                            uni = s.slice(1, 1);\r\n                            if (zeci == 1 && uni != 0)\r\n                                ss = ss + numar(uni, 4) + \"sprezece \" + un[num * 2 - 1];\r\n                            else if (zeci == 1 && uni == 0)\r\n                                ss = \"zece \" + un[num * 2];\r\n                            else\r\n                                ss = ss + numar(zeci, 2) + ((zeci != 0) ? \"zeci \" : \"\") + ((uni != \"0\") ? \"si \".numar(uni, 3) : \"\") + un[num * 2 - 1];\r\n                            sir = ss + sir;\r\n                            break;\r\n                        case 1:\r\n                            sute = 0;\r\n                            zeci = 0;\r\n                            uni = s.slice(0, 1);\r\n                            sir = numar(uni, (num == 3) ? 1 : 3) + ((uni == 1) ? un[(num - 1) * 2] : un[(num - 1) * 2 + 1]) + sir;\r\n                            break;\r\n                    }\r\n                    num--;\r\n                }\r\n            }\r\n            if (i == 0)\r\n                cstr += sir + \" lei si \";\r\n            else if (i == 1)\r\n                cstr += sir + \" bani\";\r\n        }\r\n  \r\n        return cstr;\r\n    }\r\n\r\n    function numar(s, z) {\r\n        var numar;\r\n        switch (z) {\r\n            case 1:\r\n                switch (s) {\r\n                    case 1:\r\n                        numar = \"o \";\r\n                        break;\r\n                    case 2:\r\n                        numar = \"doua \";\r\n                        break;\r\n                    case 3:\r\n                        numar = \"trei \";\r\n                        break;\r\n                    case 4:\r\n                        numar = \"patru \";\r\n                        break;\r\n                    case 5:\r\n                        numar = \"cinci \";\r\n                        break;\r\n                    case 6:\r\n                        numar = \"sase \";\r\n                        break;\r\n                    case 7:\r\n                        numar = \"sapte \";\r\n                        break;\r\n                    case 8:\r\n                        numar = \"opt \";\r\n                        break;\r\n                    case 9:\r\n                        numar = \"noua \";\r\n                }\r\n                break;\r\n            case 2:\r\n                switch (s) {\r\n                    case 1:\r\n                        numar = \"zece\";\r\n                        break;\r\n                    case 2:\r\n                        numar = \"doua\";\r\n                        break;\r\n                    case 3:\r\n                        numar = \"trei\";\r\n                        break;\r\n                    case 4:\r\n                        numar = \"patru\";\r\n                        break;\r\n                    case 5:\r\n                        numar = \"cinci\";\r\n                        break;\r\n                    case 6:\r\n                        numar = \"sai\";\r\n                        break;\r\n                    case 7:\r\n                        numar = \"sapte\";\r\n                        break;\r\n                    case 8:\r\n                        numar = \"opt\";\r\n                        break;\r\n                    case 9:\r\n                        numar = \"noua\";\r\n                }\r\n                break;\r\n            case 3:\r\n                switch (s) {\r\n                    case 1:\r\n                        numar = \"unu \";\r\n                        break;\r\n                    case 2:\r\n                        numar = \"doi \";\r\n                        break;\r\n                    case 3:\r\n                        numar = \"trei \";\r\n                        break;\r\n                    case 4:\r\n                        numar = \"patru \";\r\n                        break;\r\n                    case 5:\r\n                        numar = \"cinci \";\r\n                        break;\r\n                    case 6:\r\n                        numar = \"sase \";\r\n                        break;\r\n                    case 7:\r\n                        numar = \"sapte \";\r\n                        break;\r\n                    case 8:\r\n                        numar = \"opt \";\r\n                        break;\r\n                    case 9:\r\n                        numar = \"noua \";\r\n                }\r\n                break;\r\n            case 4:\r\n                switch (s) {\r\n                    case 1:\r\n                        numar = \"un\";\r\n                        break;\r\n                    case 2:\r\n                        numar = \"doi\";\r\n                        break;\r\n                    case 3:\r\n                        numar = \"trei\";\r\n                        break;\r\n                    case 4:\r\n                        numar = \"pai\";\r\n                        break;\r\n                    case 5:\r\n                        numar = \"cinci\";\r\n                        break;\r\n                    case 6:\r\n                        numar = \"sai\";\r\n                        break;\r\n                    case 7:\r\n                        numar = \"sapte\";\r\n                        break;\r\n                    case 8:\r\n                        numar = \"opt\";\r\n                        break;\r\n                    case 9:\r\n                        numar = \"noua\";\r\n                }\r\n                break;\r\n        }\r\n        return numar;\r\n    }\r\n\r\n\r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .directive('dz', dzDirective)\r\n        .filter('comma2decimal', comma2decimal)\r\n        .filter('decimal2comma', decimal2comma)\r\n        .filter('dz', dz);\r\n\r\n\r\n\r\n    /** @ngInject */\r\n    function dzDirective($filter) {\r\n        return {\r\n            restrict: 'A',\r\n            require: 'ngModel',\r\n            link: function (scope, element, attrs, ngModelController) {\r\n\r\n                ngModelController.$parsers.push(function (data) {\r\n                    //convert data from view format to model format\r\n                    data = $filter('comma2decimal')(data);\r\n                    return data;\r\n                });\r\n\r\n                ngModelController.$formatters.push(function (data) {\r\n                    //convert data from model format to view format\r\n                    data = $filter('decimal2comma')(data);\r\n                    return data;\r\n                });\r\n            }\r\n        };\r\n    }\r\n    // parser\r\n    function comma2decimal() {\r\n\r\n        return function (input) {\r\n\r\n            var ret = input ? input.toString().trim().replace(\",\", \".\") : input.toString();\r\n            if (ret.length < 1 || isNaN(ret)) {\r\n                alert('NUMAI NUMERE!');\r\n                return '';\r\n            }\r\n            return parseFloat(ret);\r\n        };\r\n    }\r\n\r\n    // formatter\r\n    function decimal2comma() {\r\n\r\n        return function (input) {\r\n            if (isNaN(input) || input == null) {\r\n                return null;\r\n            }\r\n            // transform point to comma\r\n            var ret = input ? input.toString().replace(\".\", \",\") : input.toString();\r\n            // deal with non-numbers\r\n\r\n\r\n            // always show 2 decimals (formatter)\r\n            if (ret) {\r\n                var decArr = ret.split(\",\");\r\n                if (decArr.length > 1) {\r\n                    var decimals = decArr[1].length;\r\n\r\n                    if (decimals === 1) {\r\n                        ret += \"0\";\r\n                    } // input value or model has 1 decimals\r\n                    if (decimals === 2) {\r\n                        ret += \"\";\r\n                    } // input value or model has 2 decimals\r\n                } else {\r\n                    ret += \",00\"; // input value or model has no decimal\r\n                }\r\n            }\r\n\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    function dz() {\r\n\r\n        return function (input) {\r\n\r\n            if (isNaN(input) || input == null || typeof input === 'undefined') {\r\n                return '';\r\n            }\r\n            // transform point to dot\r\n            var r = input ? Math.round(input, 2).toString().replace(\".\", \",\") : input.toString();\r\n            // deal with non-numbers\r\n\r\n\r\n            // always show 2 decimals (formatter)\r\n            if (r) {\r\n                var decArr = r.split(\",\");\r\n                if (decArr.length > 1) {\r\n                    var decimals = decArr[1].length;\r\n                    if (decimals === 0) {\r\n                        r += \"00\"\r\n                    }\r\n                    if (decimals === 1) {\r\n                        r += \"0\";\r\n                    } // input value or model has 1 decimals\r\n                    if (decimals === 2) {\r\n                        r += \"\";\r\n                    } // input value or model has 2 decimals\r\n                } else {\r\n                    r += \",00\"; // input value or model has no decimal\r\n                }\r\n            }\r\n\r\n            return r;\r\n        };\r\n    }\r\n\r\n\r\n\r\n})();\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .directive('pjson', pjson);\r\n\r\n\r\n\r\n    /** @ngInject */\r\n    function pjson($sce) {\r\n\r\n        function link(scope, elem, attrs) {\r\n            scope.stuff =  $sce.trustAsHtml(syntaxHighlight(attrs.data))\r\n        }\r\n\r\n        return {\r\n            restrict: \"AE\",\r\n            link: link,\r\n            template: \"<pre><span ng-bind-html = 'stuff'></pre>\"\r\n        }\r\n    }\r\n\r\n\r\n\r\n    function syntaxHighlight(json) {\r\n        json = angular.fromJson(json);\r\n        json = angular.toJson(json,1);\r\n        json = json.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n        return json.replace(/(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g, function (match) {\r\n            var cls = 'number';\r\n            if (/^\"/.test(match)) {\r\n                if (/:$/.test(match)) {\r\n                    cls = 'key';\r\n                } else {\r\n                    cls = 'string';\r\n                }\r\n            } else if (/true|false/.test(match)) {\r\n                cls = 'boolean';\r\n            } else if (/null/.test(match)) {\r\n                cls = 'null';\r\n            }\r\n            return '<span class=\"' + cls + '\">' + match + '</span>';\r\n        });\r\n    }\r\n\r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .directive('ngRightClick', ngRightClick);\r\n\r\n\r\n\r\n    /** @ngInject */\r\n\r\n    function ngRightClick($parse) {\r\n        return function (scope, element, attrs) {\r\n            var fn = $parse(attrs.ngRightClick);\r\n            element.bind('contextmenu', function (event) {\r\n                scope.$apply(function () {\r\n                    event.preventDefault();\r\n                    fn(scope, {\r\n                        $event: event\r\n                    });\r\n                });\r\n            });\r\n        };\r\n    }\r\n\r\n\r\n\r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .filter('title', title);\r\n\r\n\r\n\r\n    /** @ngInject */\r\n\r\n    function title()  {\r\n        return  function(input) {\r\n            var smallWords = /^(a|an|and|as|at|but|by|en|for|if|in|nor|of|on|or|per|the|to|vs?\\.?|de|srl)$/i;\r\n            if ( typeof input !== 'undefined' || input != null ) {\r\n                input = input.toLowerCase();\r\n            } else {\r\n                input = \"\";\r\n            }\r\n            \r\n            return input.replace(/[A-Za-z0-9\\u00C0-\\u00FF]+[^\\s-]*/g, function(match, index, title) {\r\n                if (index > 0 && index + match.length !== title.length &&\r\n                    match.search(smallWords) > -1 && title.charAt(index - 2) !== \":\" &&\r\n                    (title.charAt(index + match.length) !== '-' || title.charAt(index - 1) === '-') &&\r\n                    title.charAt(index - 1).search(/[^\\s-]/) < 0) {\r\n                    return match.toLowerCase();\r\n                }\r\n\r\n                if (match.substr(1).search(/[A-Z]|\\../) > -1) {\r\n                    return match;\r\n                }\r\n\r\n                return match.charAt(0).toUpperCase() + match.substr(1);\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .service('arrays', arrays);\r\n\r\n    /** @ngInject */\r\n    function arrays() {\r\n\r\n        this.max = max;\r\n        this.min = min;\r\n        this.sum = sum;\r\n        this.closest = closest;\r\n        this.toTree = toTree;\r\n        this.jsonify = jsonify;\r\n        this.isJSON = isJSON;\r\n        this.findObjects = findObjects;\r\n\r\n        function max(arr, elem) {\r\n            var item = {};\r\n            item[elem] = 0;\r\n            for (var i = 0; i < arr.length; i++) {\r\n                var e = arr[i];\r\n                if (parseFloat(e[elem]) > item[elem]) {\r\n                    item = e;\r\n                }\r\n            }\r\n            return item;\r\n        }\r\n\r\n        function min(arr, elem) {\r\n            var item = arr[0];\r\n            for (var i = 0; i < arr.length; i++) {\r\n                var e = arr[i];\r\n                if (e[elem] < item[elem]) {\r\n                    item = e;\r\n                }\r\n            }\r\n            return item;\r\n        }\r\n\r\n        function sum(arr, elem) {\r\n            var sum = 0;\r\n            angular.forEach(arr, function (e) {\r\n                angular.isUndefined(elem) ? sum += parseFloat(e[elem]) : null\r\n            })\r\n            return sum;\r\n        }\r\n\r\n        function closest(arr, attr, value, direction) {\r\n            //our target item\r\n            value = parseInt(value);\r\n            var selectItem = arr.filter(function (e) {\r\n                return e[attr] == value;\r\n            })[0];\r\n            var selectItemValue = parseInt(selectItem[attr]);\r\n            var ecart = 0;\r\n            if (direction == 'before') {\r\n                arr = arr.filter(function (e) {\r\n                    return parseInt(e[attr]) < value;\r\n                });\r\n            } else if (direction == 'after') {\r\n                arr = arr.filter(function (e) {\r\n                    return parseInt(e[attr]) > value;\r\n                });\r\n            }\r\n            for (var i = 0; i < arr.length; i++) {\r\n                var test = arr[i];\r\n                var testValue = parseInt(test[attr]);\r\n                var newEcart = Math.abs(selectItemValue - testValue);\r\n                if (ecart == 0 || newEcart < ecart) {\r\n                    selectItem = test;\r\n                    ecart = newEcart;\r\n                }\r\n            }\r\n            return selectItem;\r\n        }\r\n\r\n\r\n\r\n\r\n        function toTree(data, options) {\r\n\r\n            if (typeof data === \"undefined\") {\r\n                data = [];\r\n            }\r\n            options = options || {};\r\n            var ID_KEY = options.idKey || 'id';\r\n            var PARENT_KEY = options.parentKey || 'parent';\r\n            var CHILDREN_KEY = options.childrenKey || 'children';\r\n\r\n            //  var item, id, parentId;\r\n            var map = {},\r\n                i = 0;\r\n            for (i = 0; i < data.length; i++) { // make cache\r\n                if (data[i][ID_KEY]) {\r\n                    map[data[i][ID_KEY]] = data[i];\r\n                    data[i][CHILDREN_KEY] = [];\r\n                }\r\n            }\r\n            for (i = 0; i < data.length; i++) {\r\n                if (data[i][PARENT_KEY]) { // is a child\r\n                    if (map[data[i][PARENT_KEY]]) // for dirty data\r\n                    {\r\n                        map[data[i][PARENT_KEY]][CHILDREN_KEY].push(data[i]); // add child to parent\r\n                        data.splice(i, 1); // remove from root\r\n                        i--; // iterator correction\r\n                    } else {\r\n                        data[i][PARENT_KEY] = 0; // clean dirty data\r\n                    }\r\n                }\r\n            }\r\n            return data;\r\n        }\r\n\r\n        // jsonify stufff\r\n        function jsonify(arr) {\r\n            if (angular.isObject(arr)) {\r\n                angular.forEach(arr, function (e, i) {\r\n                    if (isJSON(e)) {\r\n                        arr[i] = angular.fromJson(e);\r\n                        jsonify(arr[i]);\r\n                    } else {\r\n                        jsonify(arr[i]);\r\n                    }\r\n\r\n                })\r\n\r\n            }\r\n            return arr;\r\n        }\r\n\r\n        function isJSON(data) {\r\n            var isJson = false\r\n            try {\r\n                // this works with JSON string and JSON object, not sure about others\r\n                var json = angular.fromJson(data);\r\n                isJson = angular.isObject(json);\r\n            } catch (ex) {\r\n                isJson = false\r\n            }\r\n            return isJson;\r\n        }\r\n\r\n        // end jsonify stufff\r\n\r\n\r\n        //deep search value in multidimensional array // return indices of rows\r\n        function findObjects(obj, targetProp, targetValue, finalResults) {\r\n            typeof finalResults == \"undefined\" ? finalResults = [] : null;\r\n\r\n          function getObject(theObject) {\r\n            let results = [];\r\n\r\n            if (theObject instanceof Array) {\r\n              for (let i = 0; i < theObject.length; i++) {\r\n                getObject(theObject[i]);\r\n              }\r\n            } else {\r\n              for (let prop in theObject) {\r\n                if (theObject.hasOwnProperty(prop)) {\r\n                  console.log(prop + ': ' + theObject[prop]);\r\n                  if (prop === targetProp) {\r\n                    console.log('--found id');\r\n                      results.push[theObject]\r\n                    if (theObject[prop] === targetValue) {\r\n                      console.log('----found porop', prop, ', ', theObject[prop]);\r\n                      finalResults.push(theObject);\r\n                    }\r\n                  }\r\n                  if (theObject[prop] instanceof Object || theObject[prop] instanceof Array) {\r\n                    getObject(theObject[prop]);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          getObject(obj);\r\n            return finalResults;\r\n        }\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n})();\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n      .module('app')\r\n      .service('authService', authService);\r\n\r\n  /** @ngInject */\r\n  function authService(APP, $http) {\r\n\r\n    this.login = login;\r\n    this.logout = logout;\r\n\r\n\r\n    function login(data) {\r\n        data.app = APP.app;\r\n        return $http.post(APP.api+'login', data ) \r\n        .then(function(response) {\r\n          return response.data;\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n   function logout() {\r\n       var data = {};\r\n       data.app = APP.app;\r\n       return $http.post( APP.api + 'logout', data).then( function(r) { return r;});\r\n   } \r\n  }\r\n\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n      .module('app')\r\n      .service('convert', convert);\r\n    \r\n    function convert() {\r\n  \r\n        this.arr2tree     = arr2tree;\r\n       \r\n\r\n        function arr2tree(data, options) {\r\n          options = options || {};\r\n          var ID_KEY = options.idKey || 'id';\r\n          var PARENT_KEY = options.parentKey || 'parent';\r\n          var CHILDREN_KEY = options.childrenKey || 'children';\r\n\r\n        //  var item, id, parentId;\r\n          var map = {}, i = 0;\r\n            for( i = 0; i < data.length; i++ ) { // make cache\r\n            if(data[i][ID_KEY]){\r\n              map[data[i][ID_KEY]] = data[i];\r\n              data[i][CHILDREN_KEY] = [];\r\n            }\r\n          }\r\n          for ( i = 0; i < data.length; i++) {\r\n            if(data[i][PARENT_KEY]) { // is a child\r\n              if(map[data[i][PARENT_KEY]]) // for dirty data\r\n              {\r\n                map[data[i][PARENT_KEY]][CHILDREN_KEY].push(data[i]); // add child to parent\r\n                data.splice( i, 1 ); // remove from root\r\n                i--; // iterator correction\r\n              } else {\r\n                data[i][PARENT_KEY] = 0; // clean dirty data\r\n              }\r\n            }\r\n          }\r\n          return data;\r\n        }           \r\n            \r\n    }\r\n\r\n\r\n\r\n})();\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n      .module('app')\r\n      .service('countryService', countryService);\r\n\r\n  /** @ngInject */\r\n  function countryService(API, $http, $q) {\r\n\r\n    \r\n      \r\n    this.counties = counties;\r\n    this.countyById = countyById;\r\n    this.countyByName = countyByName;\r\n    this.city = city;\r\n      \r\n    this.cityById = cityById;\r\n    this.citiesByCountyId = citiesByCountyId;\r\n\r\n    function counties() {\r\n        var postdata = {};\r\n        postdata.scope = 'judete';\r\n        postdata.where = [];\r\n        \r\n      return  $http.post(API+'/api/get', postdata ) \r\n      .then(function(response) {\r\n          return response.data.result;\r\n      });\r\n\r\n    }\r\n    \r\n    function countyById(id) {\r\n        var postdata = {};\r\n        postdata.scope = 'judete';\r\n        postdata.where = [];\r\n        postdata.where.push({'key':'id', 'value':id});\r\n        var resp = $http.post(API+'/api/get', postdata ) \r\n        .then(function(response) {\r\n            return response;\r\n        });\r\n            return resp;\r\n    }\r\n      \r\n    function countyByName(name) {\r\n        var postdata = {};\r\n        postdata.scope = 'judete';\r\n        postdata.where = [];\r\n        postdata.where.push({'key':'name', 'value':name});\r\n        var resp = $http.post(API+'/api/get', postdata ) \r\n        .then(function(response) {\r\n            return response;\r\n        });\r\n            return resp;\r\n    } \r\n      \r\n      \r\n    function cityById(id) {\r\n        var postdata = {};\r\n        postdata.scope = 'localitati';\r\n        postdata.where = [];\r\n        postdata.where.push({'key':'id', 'value':id});\r\n        var resp = $http.post(API+'/api/get', postdata ) \r\n        .then(function(response) {\r\n            return response;\r\n        });\r\n            return resp;\r\n    } \r\n      \r\n    function citiesByCountyId(countyId) {\r\n        var postdata = {};\r\n        postdata.scope = 'localitati';\r\n        postdata.where= [];\r\n        postdata.where.push({'key':'county_id','value':countyId});\r\n        return  $http.post(API+'/api/get', postdata ) \r\n        .then(function(r) {\r\n            return r;\r\n        });\r\n\r\n    } \r\n      \r\n    function city(cityId) {\r\n        var localitate,localitati, judete, promise;\r\n        \r\n        localitate = cityById(cityId).then(function(r) { return r.data.result[0]; });\r\n         \r\n        localitati = $q.when(localitate).then(function(r) {\r\n            return citiesByCountyId(r.county_id).then(function(rs) {return rs.data.result;});\r\n        })\r\n  \r\n        judete = counties().then(function(r) {   return r.data.result; });\r\n        \r\n        promise = [localitate, localitati, judete];\r\n        return $q.all(promise);\r\n    }\r\n  }\r\n\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n      .module('app')\r\n      .service('dateService', dateService);\r\n\r\n  /** @ngInject */\r\n  function dateService() {\r\n\t  \r\n\t\tthis.convertEN  = convertEN;\r\n\r\n\t\tfunction pad(s) { return (s < 10) ? '0' + s : s; }\r\n\t\t\r\n\t\tfunction convertEN(item) {\r\n\t\t\tvar d = new Date(item);\r\n\t\t\treturn [d.getFullYear(),  pad(d.getMonth()+1), pad(d.getDate())].join('-');\r\n\t\t}\t\t\r\n\r\n\t}\r\n\r\n})();\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n      .module('app')\r\n      .service('exportService', exportService);\r\n    \r\n    function exportService($timeout) {\r\n  \r\n        this.print     = print;\r\n       \r\n\r\n        function print(data) {\r\n            var popupWindow = window.open('', '_blank', 'width=1000,height=700,scrollbars=no,menubar=no,toolbar=no,location=no,status=no,titlebar=no');\r\n            popupWindow.document.open();\r\n            popupWindow.document.write('<html><head><link rel=\"stylesheet\" type=\"text/css\" href=\"assets/css/print.style.css\" /></head><body onload=\"window.print()\">' + data + '</html>');\r\n            $timeout(function() {\r\n                popupWindow.document.close();  \r\n                popupWindow.window.close();\r\n            }, 500);\r\n                      \r\n          return null;\r\n        }           \r\n            \r\n    }\r\n\r\n\r\n})();\n (function() {\r\n  'use strict';\r\n\r\n  angular\r\n      .module('app')\r\n      .service('fileService', fileService);\r\n\r\n  /** @ngInject */\r\n  function fileService() {\r\n\r\n    this.getFile            =  getFile;\r\n    this.upload             =  upload;\r\n    this.remove             =  remove;\r\n\r\n\r\n\r\n    function getFile(fileName) {\r\n        \r\n        return fileName;\r\n    }  \r\n      \r\n    function upload(file) {\r\n        return file; \r\n    }\r\n      \r\n    function remove(file) {\r\n        return file;\r\n    }\r\n  }\r\n\r\n})();\r\n\r\n\r\n \n (function() {\r\n  'use strict';\r\n\r\n  angular\r\n      .module('app')\r\n      .service('gmDialog', gmDialog);\r\n\r\n  /** @ngInject */\r\n  function gmDialog($mdDialog, $mdToast) {\r\n\r\n    this.alert            =  alert;\r\n    this.confirm          =  confirm;\r\n    this.prompt          =   prompt;\r\n    this.toast            = toast;\r\n\r\n\r\n\r\n    function alert(titleText, messageText, closeButtonText) {\r\n        \r\n        var title = titleText || null, \r\n            contents = messageText || null,\r\n            close = closeButtonText || null;\r\n        \r\n        var alert = $mdDialog.show(\r\n            $mdDialog.alert()\r\n                .parent(angular.element(document.querySelector('#popupContainer')))\r\n                .clickOutsideToClose(true)\r\n                .title(title)\r\n                .textContent(contents)\r\n                .ariaLabel('Confirm')\r\n                .ok(close)\r\n             \r\n\r\n        );\r\n        return alert;\r\n    }  \r\n      \r\n    function confirm(ev, titleText, messageText, optin, optout) {\r\n        var title = titleText || null,\r\n            contents = messageText || null,\r\n            yesButton = optin || \"OK\",\r\n            noButton = optout || \"CANCEL\";\r\n        \r\n        var confirm = $mdDialog.confirm()\r\n              .title(title)\r\n              .textContent(contents)\r\n              .ariaLabel('confirm')\r\n              .targetEvent(ev)\r\n              .ok(yesButton)\r\n              .cancel(noButton);\r\n\r\n        var show = $mdDialog.show(confirm);\r\n        return show;\r\n    }\r\n\r\n      function prompt(ev, title, textContext, yesButton, noButton) {\r\n          title = title || null;\r\n          textContext = textContext || null;\r\n          yesButton = yesButton || \"OK\";\r\n          noButton = noButton || \"CANCEL\";\r\n\r\n          // Appending dialog to document.body to cover sidenav in docs app\r\n          var confirm = $mdDialog.prompt()\r\n              .title(title)\r\n              .textContent(textContext)\r\n              .ariaLabel('prompt')\r\n              .targetEvent(ev)\r\n              .ok(yesButton)\r\n              .cancel(noButton);\r\n\r\n          var modal = $mdDialog.show(confirm);\r\n          return modal;\r\n\r\n      }\r\n      \r\n      function toast(elem) {\r\n          $mdToast.show(\r\n              $mdToast.simple()\r\n              .textContent(elem)\r\n              .position('top right')\r\n              .hideDelay(1000)\r\n              .toastClass(\"toast\")\r\n          );\r\n      }\r\n      \r\n    \r\n  }\r\n\r\n})();\r\n\r\n\r\n \n(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('app')\r\n\t\t.service('homePage', homePage);\r\n\r\n\t/** @ngInject */\r\n\tfunction homePage() {\r\n\r\n\r\n\r\n\t\tthis.items = items;\r\n\r\n\t\tfunction items() {\r\n\t\t\treturn [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"REGISTRU\",\r\n\t\t\t\t\ttitleIcon: \"maps:ic_local_library_24px\",\r\n\t\t\t\t\ttitleIconColor: \"navy\",\r\n\t\t\t\t\ttext: \"Accesați registrul de evidență a dosarelor cu ofertele de vânzare teren, gestionați și tipăriți toate documentele aferente procedurii de vânzare teren\",\r\n\t\t\t\t\tbuttons: [{\r\n\t\t\t\t\t\tlabel: \"ACCESEAZĂ\",\r\n\t\t\t\t\t\taction: \"index.registru\",\r\n\t\t\t\t\t\ticon: \"\"\r\n\t\t\t\t\t}],\r\n\t\t\t\t\tbgColor: \"#C6ACC7\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"AGENDĂ\",\r\n\t\t\t\t\ttitleIcon: \"av:ic_library_books_24px\",\r\n\t\t\t\t\ttitleIconColor: \"#FDF3B8\",\r\n\t\t\t\t\ttext: \"Gestionați persoanele fizice sau juridice regăsite în aplicație, atât vânzatori cât și mandatari sau preemptori\",\r\n\t\t\t\t\tbuttons: [{\r\n\t\t\t\t\t\tlabel: \"GESTIONEAZĂ\",\r\n\t\t\t\t\t\taction: \"index.addressBook({action:'', id:''})\",\r\n\t\t\t\t\t\ticon: \"\"\r\n\t\t\t\t\t}],\r\n\t\t\t\t\tbgColor: \"#ECB4BF\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"SETARI\",\r\n\t\t\t\t\ttitleIcon: \"action:ic_settings_24px\",\r\n\t\t\t\t\ttitleIconColor: \"brown\",\r\n\t\t\t\t\ttext: \"Configurați semăturile și persoanele aferente, pe fiecare document în parte și accesul public online la documentele prevăzute de lege\",\r\n\t\t\t\t\tbuttons: [{\r\n\t\t\t\t\t\tlabel: \"GESTIONEAZĂ\",\r\n\t\t\t\t\t\taction: \"index.settings\",\r\n\t\t\t\t\t\ticon: \"\"\r\n\t\t\t\t\t}],\r\n\t\t\t\t\tbgColor: \"#FBD7B7\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"STATISTICI\",\r\n\t\t\t\t\ttitleIcon: \"editor:ic_pie_chart_24px\",\r\n\t\t\t\t\ttitleIconColor: \"#ECB4BF\",\r\n\t\t\t\t\ttext: \"Dintr-o scurtă privire, analizați stadiul de rezolvare al dosarelor în termen, vedeți ce dosare au expirat sau consultați dosarele anterioare\",\r\n\t\t\t\t\tbuttons: [{\r\n\t\t\t\t\t\tlabel: \"CONSULTĂ\",\r\n\t\t\t\t\t\taction: \"index.stats\",\r\n\t\t\t\t\t\ticon: \"\"\r\n\t\t\t\t\t}],\r\n\t\t\t\t\tbgColor: \"#FDF3B8\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"ÎMPREUNĂ\",\r\n\t\t\t\t\ttitleIcon: \"action:ic_favorite_24px\",\r\n\t\t\t\t\ttitleIconColor: \"red\",\r\n\t\t\t\t\ttext: \"Ajutați-ne să devenim cei mai buni! Comunicați-ne prin acest modul orice sugestii sau probleme referitoare la aplicație. Vă mulțumim!\",\r\n\t\t\t\t\tbuttons: [{\r\n\t\t\t\t\t\tlabel: \"CONSULTĂ\",\r\n\t\t\t\t\t\taction: \"index.together({action:'list', id:''})\",\r\n\t\t\t\t\t\ticon: \"\"\r\n\t\t\t\t\t}],\r\n\t\t\t\t\tbgColor: \"#C2E3EC\"\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t\t]\r\n\t\t}\r\n\r\n\t}\r\n\r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .service('httpMessage', httpMessage);\r\n\r\n    /** @ngInject */\r\n    function httpMessage() {\r\n\r\n        this.get = getMessage;\r\n\r\n        var messages = [\r\n            {\r\n                \"id\": 1,\r\n                \"code\": 200,\r\n                \"short\": \"OK\",\r\n                \"long\": \"The request is OK (this is the standard response for successful HTTP requests)\"},\r\n            {\r\n                \"id\": 2,\r\n                \"code\": 201,\r\n                \"short\": \"Created\",\r\n                \"long\": \"The request has been fulfilled, and a new resource is created\"},\r\n            {\r\n                \"id\": 3,\r\n                \"code\": 202,\r\n                \"short\": \"Accepted\",\r\n                \"long\": \"The request has been accepted for processing, but the processing has not been completed\"},\r\n            {\r\n                \"id\": 4,\r\n                \"code\": 203,\r\n                \"short\": \"Non-Authoritative Information\",\r\n                \"long\": \"The request has been successfully processed, but is returning information that may be from another source\" },\r\n            {\r\n                \"id\": 5,\r\n                \"code\": 204,\r\n                \"short\": \"No Content\",\r\n                \"long\": \"The request has been successfully processed, but is not returning any content\"},\r\n            {\r\n                \"id\": 6,\r\n                \"code\": 205,\r\n                \"short\": \"Reset Content\",\r\n                \"long\": \"The request has been successfully processed, but is not returning any content, and requires that the requester reset the document view\" },\r\n            {\r\n                \"id\": 7,\r\n                \"code\": 206,\r\n                \"short\": \"Partial Content\",\r\n                \"long\": \"The server is delivering only part of the resource due to a range header sent by the client\" },\r\n            {\r\n                \"id\": 8,\r\n                \"code\": 300,\r\n                \"short\": \"Multiple Choices\",\r\n                \"long\": \"A link list. The user can select a link and go to that location. Maximum five addresses �\" },\r\n            {\r\n                \"id\": 9,\r\n                \"code\": 301,\r\n                \"short\": \"Moved Permanently\",\r\n                \"long\": \"The requested page has moved to a new URL�\" },\r\n            {\r\n                \"id\": 10,\r\n                \"code\": 302,\r\n                \"short\": \"Found\",\r\n                \"long\": \"The requested page has moved temporarily to a new URL�\" },\r\n            {\r\n                \"id\": 11,\r\n                \"code\": 303,\r\n                \"short\": \"See Other\",\r\n                \"long\": \"The requested page can be found under a different URL\" },\r\n            {\r\n                \"id\": 12,\r\n                \"code\": 304,\r\n                \"short\": \"Not Modified\",\r\n                \"long\": \"Indicates the requested page has not been modified since last requested\" },\r\n            {\r\n                \"id\": 13,\r\n                \"code\": 306,\r\n                \"short\": \"Switch Proxy\",\r\n                \"long\": \"No longer used\" },\r\n            {\r\n                \"id\": 14,\r\n                \"code\": 307,\r\n                \"short\": \"Temporary Redirect\",\r\n                \"long\": \"The requested page has moved temporarily to a new URL\" },\r\n            {\r\n                \"id\": 15,\r\n                \"code\": 308,\r\n                \"short\": \"Resume Incomplete\",\r\n                \"long\": \"Used in the resumable requests proposal to resume aborted PUT or POST requests\" },\r\n            {\r\n                \"id\": 16,\r\n                \"code\": 400,\r\n                \"short\": \"Bad Request\",\r\n                \"long\": \"The request cannot be fulfilled due to bad syntax\" },\r\n            {\r\n                \"id\": 17,\r\n                \"code\": 401,\r\n                \"short\": \"Unauthorized\",\r\n                \"long\": \"The request was a legal request, but the server is refusing to respond to it. For use when authentication is possible but has failed or not yet been provided\" },\r\n            {\r\n                \"id\": 18,\r\n                \"code\": 402,\r\n                \"short\": \"Payment Required\",\r\n                \"long\": \"Reserved for future use\" },\r\n            {\r\n                \"id\": 19,\r\n                \"code\": 403,\r\n                \"short\": \"Forbidden\",\r\n                \"long\": \"The request was a legal request, but the server is refusing to respond to it\" },\r\n            {\r\n                \"id\": 20,\r\n                \"code\": 404,\r\n                \"short\": \"Not Found\",\r\n                \"long\": \"The requested page could not be found but may be available again in the future\" },\r\n            {\r\n                \"id\": 21,\r\n                \"code\": 405,\r\n                \"short\": \"Method Not Allowed\",\r\n                \"long\": \"A request was made of a page using a request method not supported by that page\" },\r\n            {\r\n                \"id\": 22,\r\n                \"code\": 406,\r\n                \"short\": \"Not Acceptable\",\r\n                \"long\": \"The server can only generate a response that is not accepted by the client\" },\r\n            {\r\n                \"id\": 23,\r\n                \"code\": 407,\r\n                \"short\": \"Proxy Authentication Required\",\r\n                \"long\": \"The client must first authenticate itself with the proxy\" },\r\n            {\r\n                \"id\": 24,\r\n                \"code\": 408,\r\n                \"short\": \"Request Timeout\",\r\n                \"long\": \"The server timed out waiting for the request\" },\r\n            {\r\n                \"id\": 25,\r\n                \"code\": 409,\r\n                \"short\": \"Conflict\",\r\n                \"long\": \"The request could not be completed because of a conflict in the request\" },\r\n            {\r\n                \"id\": 26,\r\n                \"code\": 410,\r\n                \"short\": \"Gone\",\r\n                \"long\": \"The requested page is no longer available\" },\r\n            {\r\n                \"id\": 27,\r\n                \"code\": 411,\r\n                \"short\": \"Length Required\",\r\n                \"long\": \"The \\\"Content-Length\\\" is not defined. The server will not accept the request without it�\" },\r\n            {\r\n                \"id\": 28,\r\n                \"code\": 412,\r\n                \"short\": \"Precondition Failed\",\r\n                \"long\": \"The precondition given in the request evaluated to false by the server\" },\r\n            {\r\n                \"id\": 29,\r\n                \"code\": 413,\r\n                \"short\": \"Request Entity Too Large\",\r\n                \"long\": \"The server will not accept the request, because the request entity is too large\" },\r\n            {\r\n                \"id\": 30,\r\n                \"code\": 414,\r\n                \"short\": \"Request-URI Too Long\",\r\n                \"long\": \"The server will not accept the request, because the URL is too long. Occurs when you convert a POST request to a GET request with a long query information�\" },\r\n            {\r\n                \"id\": 31,\r\n                \"code\": 415,\r\n                \"short\": \"Unsupported Media Type\",\r\n                \"long\": \"The server will not accept the request, because the media type is not supported�\" },\r\n            {\r\n                \"id\": 32,\r\n                \"code\": 416,\r\n                \"short\": \"Requested Range Not Satisfiable\",\r\n                \"long\": \"The client has asked for a portion of the file, but the server cannot supply that portion\" },\r\n            {\r\n                \"id\": 33,\r\n                \"code\": 417,\r\n                \"short\": \"Expectation Failed\",\r\n                \"long\": \"The server cannot meet the requirements of the Expect request-header field\" },\r\n            {\r\n                \"id\": 34,\r\n                \"code\": 500,\r\n                \"short\": \"Internal Server Error\",\r\n                \"long\": \"A generic error message, given when no more specific message is suitable\" },\r\n            {\r\n                \"id\": 35,\r\n                \"code\": 501,\r\n                \"short\": \"Not Implemented\",\r\n                \"long\": \"The server either does not recognize the request method, or it lacks the ability to fulfill the request\" },\r\n            {\r\n                \"id\": 36,\r\n                \"code\": 502,\r\n                \"short\": \"Bad Gateway\",\r\n                \"long\": \"The server was acting as a gateway or proxy and received an invalid response from the upstream server\" },\r\n            {\r\n                \"id\": 37,\r\n                \"code\": 503,\r\n                \"short\": \"Service Unavailable\",\r\n                \"long\": \"The server is currently unavailable (overloaded or down)\" },\r\n            {\r\n                \"id\": 38,\r\n                \"code\": 504,\r\n                \"short\": \"Gateway Timeout\",\r\n                \"long\": \"The server was acting as a gateway or proxy and did not receive a timely response from the upstream server\" },\r\n            {\r\n                \"id\": 39,\r\n                \"code\": 505,\r\n                \"short\": \"HTTP Version Not Supported\",\r\n                \"long\": \"The server does not support the HTTP protocol version used in the request\" },\r\n            {\r\n                \"id\": 40,\r\n                \"code\": 511,\r\n                \"short\": \"Network Authentication Required\",\r\n                \"long\": \"The client needs to authenticate to gain network access\" }];\r\n\r\n        function getMessage(id) {\r\n            if (typeof id == 'undefined') { return messages; } \r\n            return messages.filter(function(item) { return item.code == id; })\r\n        }        \r\n\r\n\r\n\r\n    }\r\n\r\n})();\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n      .module('app')\r\n      .service('isValid', isValid);\r\n\r\n  /** @ngInject */\r\n  function isValid() {\r\n\r\n    \r\n      \r\n    this.cnp = cnp;\r\n\r\n\r\n\t// cnp validation\r\n    function cnp(p_cnp) {\r\n        var result = {};\r\n        var i = 0,\r\n            year = 0,\r\n            hashResult = 0,\r\n            cnp = [],\r\n            hashTable = [2, 7, 9, 1, 4, 6, 3, 5, 8, 2, 7, 9];\r\n        if (p_cnp.length !== 13) {\r\n            result.ok = false;\r\n            result.err = \"Lungime incorectă\";\r\n            return result;\r\n        }\r\n        for (i = 0; i < 13; i++) {\r\n            cnp[i] = parseInt(p_cnp.charAt(i), 10);\r\n            if (isNaN(cnp[i])) {\r\n                \r\n                result.ok = false;\r\n                result.err = \"CNP trebuie să fie numeric!\";\r\n                return result;\r\n            }\r\n            if (i < 12) {\r\n                hashResult = hashResult + (cnp[i] * hashTable[i]);\r\n            }\r\n        }\r\n        hashResult = hashResult % 11;\r\n        if (hashResult === 10) {\r\n            hashResult = 1;\r\n        }\r\n        year = (cnp[1] * 10) + cnp[2];\r\n        switch (cnp[0]) {\r\n        case 1:\r\n        case 2:\r\n            {\r\n                year += 1900;\r\n            }\r\n            break;\r\n        case 3:\r\n        case 4:\r\n            {\r\n                year += 1800;\r\n            }\r\n            break;\r\n        case 5:\r\n        case 6:\r\n            {\r\n                year += 2000;\r\n            }\r\n            break;\r\n        case 7:\r\n        case 8:\r\n        case 9:\r\n            {\r\n                year += 2000;\r\n                if (year > (parseInt(new Date().getYear(), 10) - 14)) {\r\n                    year -= 100;\r\n                }\r\n            }\r\n            break;\r\n        default:\r\n            {\r\n                return false;\r\n            }\r\n        }\r\n        if (year < 1800 || year > 2099) {\r\n            return false;\r\n        }\r\n        return (cnp[12] === hashResult);\r\n\r\n    }\r\n    \r\n          \r\n  }\r\n\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .service('menuService', menuService);\r\n\r\n    /** @ngInject */\r\n    function menuService() {\r\n\r\n        this.main = main;\r\n        this.left = left;\r\n        this.settings = settings;\r\n\r\n        function left() {\r\n            return [\r\n                {\r\n                    id: 1,\r\n                    name: 'Registru general',\r\n                    icon: 'maps:ic_local_library_24px',\r\n                    state: 'index.registru'\r\n\r\n              },\r\n                {\r\n                    id: 2,\r\n                    name: 'Agendă',\r\n                    icon: 'av:ic_library_books_24px',\r\n                    state: \"index.addressBook({action:'', id:''})\"\r\n\r\n              },\r\n                {\r\n                    id: 3,\r\n                    name: 'Configurări',\r\n                    icon: 'action:ic_settings_24px',\r\n                    state: 'index.settings'\r\n              }\r\n\r\n            ];\r\n        }\r\n\r\n        function main() {\r\n            return [\r\n                {\r\n                    id: 1,\r\n                    name: 'Registru general contracte',\r\n                    details: \"acesați registrul general pentru a vedea toate contravtele\",\r\n                    icon: 'maps:ic_local_library_24px',\r\n                    bgColor: '#BBDEFB',\r\n                    textColor: '#00000',\r\n                    state: 'index.registru'\r\n\r\n              },\r\n                {\r\n                    id: 3,\r\n                    name: 'Alerte și avertizări',\r\n                    icon: 'alert:ic_warning_24px',\r\n                    bgColor: '#BBDEFB',\r\n                    state: 'index.alerts'\r\n              },\r\n                {\r\n                    id: 4,\r\n                    name: 'Configurări',\r\n                    icon: 'action:ic_settings_24px',\r\n                    bgColor: '#BBDEFB',\r\n                    state: 'index.main',\r\n                    children: [\r\n                        {\r\n                            id: 1,\r\n                            name: 'Antete',\r\n                            icon: 'action:ic_verified_user_24px',\r\n                            state: 'index.settings-antet'\r\n\r\n              },\r\n                        {\r\n                            id: 2,\r\n                            name: 'Tipuri documente',\r\n                            state: \"index.settings-tipdoc\",\r\n                            icon: 'action:ic_assignment_turned_in_24px'\r\n\r\n              },\r\n                        {\r\n                            id: 3,\r\n                            name: 'Alte configurări',\r\n                            state: 'index.settings-other',\r\n                            icon: 'action:ic_settings_applications_24px'\r\n              }\r\n\r\n            ]\r\n              },\r\n              {\r\n                     id: 5,\r\n                    name: 'Liste și rapoarte',\r\n                    icon: 'action:ic_list_24px',\r\n                    bgColor: '#BBDEFB',\r\n                    state: 'index.main'             \r\n\r\n                }\r\n\r\n            ];\r\n        }\r\n\r\n        function settings() {\r\n            return [\r\n                {\r\n                    id: 1,\r\n                    name: 'Antete',\r\n                    icon: 'editor:ic_insert_photo_24px',\r\n                    state: 'index.settings-antet'\r\n\r\n              },\r\n                {\r\n                    id: 2,\r\n                    name: 'Tipuri documente',\r\n                    icon: 'av:ic_library_books_24px',\r\n                    state: \"index.settings-tipdoc\"\r\n\r\n              },\r\n                {\r\n                    id: 3,\r\n                    name: 'Alte configurări',\r\n                    icon: 'action:ic_settings_24px',\r\n                    state: 'index.settings-other'\r\n              }\r\n\r\n            ];\r\n        }\r\n\r\n\r\n    }\r\n\r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .service('qs', qs);\r\n\r\n    /** @ngInject */\r\n    function qs($http, APP, gmDialog) {\r\n\r\n\r\n        this.get = get;\r\n        this.getData = getData;\r\n        this.getDosare = getDosare;\r\n        this.getWhereId = getWhereId;\r\n        this.create = create;\r\n        this.update = update;\r\n        this.remove = remove;\r\n        this.smartRemove = smartRemove;\r\n        this.max = maximum\r\n        this.lookup = lookup\r\n\r\n\r\n        function get(table, data) {\r\n            let postdata = {}\r\n            if(data) { postdata = angular.extend({table:table}, data )} else { postdata = {table:table}}\r\n            return $http.post(APP.api + \"getData\", postdata)\r\n            .then( r => r, err => err)\r\n        }\r\n        \r\n        function getWhereId(id) {\r\n            return $http.post(APP.api + 'dosare', {where: {id: id}}).then( r => r.data, err => console.log(err) )\r\n        }\r\n        \r\n        function getData(data={}) {\r\n           \r\n\r\n            return $http.post(APP.api +\"getData\", data)\r\n                .then(function (response) {\r\n                    return response.data;\r\n                }, ()=> { console.log(\"handled rejection\") });\r\n            \r\n        }\r\n        \r\n        function getDosare(data) {\r\n            angular.element(\".page-loading\").removeClass(\"hidden\")\r\n            var resp = $http.post(APP.api + \"dosare\", data)\r\n               \r\n                .then(function (response) {\r\n                    angular.element(\".page-loading\").addClass(\"hidden\")\r\n                    return response.data;\r\n                }, ()=> { console.log(\"handled rejection\") });\r\n            return resp;\r\n        }        \r\n\r\n\r\n        \r\n        function create(table, data) {\r\n            angular.element(\".page-loading\").removeClass(\"hidden\")\r\n            data.accessType = data.accessType || \"private\"\r\n            var resp = $http.put(APP.api + \"create\", {table: table, data: data})\r\n                .then(function (response) {\r\n                    angular.element(\".page-loading\").addClass(\"hidden\")\r\n                    return response;\r\n                });\r\n            return resp;\r\n        }\r\n\r\n        function update(table, data) {\r\n            angular.element(\".page-loading\").removeClass(\"hidden\")\r\n            var resp = $http.patch(APP.api + \"update\", {table: table, data: data})\r\n                .then(function (response) {\r\n                    angular.element(\".page-loading\").addClass(\"hidden\")\r\n                    return response;\r\n                });\r\n            return resp;\r\n        }\r\n\r\n        function remove(table, id) {\r\n            let resp = $http.post(APP.api + \"remove\", angular.extend({table:table}, {where:{id:id}} ))\r\n            return resp.then( response =>  response ,   err => err)\r\n        }\r\n\r\n        function smartRemove(table, key, value) {\r\n            var postdata = {};\r\n            postdata.scope = table;\r\n            postdata.where = {\r\n                key: key,\r\n                value: value\r\n            };\r\n            return $http.post(APP.api + 'api/smartdelete', postdata)\r\n                .then(function (response) {\r\n                    return response;\r\n                });\r\n\r\n        }\r\n\r\n        function maximum(table, field = 'id') {\r\n            return $http.post( APP.api + 'max', {table: table, field: field})\r\n        }\r\n        \r\n        function lookup(table, data) {\r\n            return $http.post( APP.api + 'lookup', angular.extend({table:table}, data))\r\n        }\r\n\r\n    }\r\n\r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .service('tipDoc', tipDoc);\r\n\r\n    /** @ngInject */\r\n    function tipDoc() {\r\n\r\n\r\n\r\n        this.get = get;\r\n\r\n        function get() {\r\n            return [{\r\n                    id: 1,\r\n                    name: \"Cerere afişarea ofertă de vânzare\",\r\n                    include: \"app/states/dosar/includes/cerere.tpl\",\r\n                    object: \"cerere\"\r\n          },\r\n                {\r\n                    id: 2,\r\n                    name: \"1B - Ofertă de vânzare teren\",\r\n                    include: \"app/states/dosar/includes/oferta.tpl\",\r\n                    object: \"oferta\"\r\n          },\r\n                {\r\n                    id: 3,\r\n                    name: \"PV1- afişare a ofertei de vânzare\",\r\n                    include: \"app/states/dosar/includes/pv1.tpl\",\r\n                    object: \"pvAfisareCerere\"\r\n          },\r\n                {\r\n                    id: 4,\r\n                    name: \"1C - Lista preemptorilor\",\r\n                    include: \"app/states/dosar/includes/listaPre.tpl\",\r\n                    object: \"listaPreemptori\"\r\n          },\r\n                {\r\n                    id: 5,\r\n                    name: \"PV2 - afişare a listei preemptorilor\",\r\n                    include: \"app/states/dosar/includes/pv2.tpl\",\r\n                    object: \"pvAfisareListaPreemptori\"\r\n          },\r\n                {\r\n                    id: 6,\r\n                    name: \"Solicitare vânzător - necesitate 3A\",\r\n                    include: \"app/states/dosar/includes/necesar3A.tpl\"\r\n          },\r\n                {\r\n                    id: 7,\r\n                    name: \"3A - Adresă Direcţia de Cultură\",\r\n                    include: \"app/states/dosar/includes/3A.tpl\"\r\n          },\r\n                {\r\n                    id: 8,\r\n                    name: \"3B - Cerere eliberare aviz specific\",\r\n                    include: \"app/states/dosar/includes/3B.tpl\"\r\n          },\r\n                {\r\n                    id: 9,\r\n                    name: \"2D - Cerere aviz M.Ap.N.\",\r\n                    include: \"app/states/dosar/includes/2D.tpl\"\r\n          },\r\n                {\r\n                    id: 10,\r\n                    name: \"1D - Comunicări de acceptare\",\r\n                    include: \"app/states/dosar/includes/1D.tpl\"\r\n          },\r\n\r\n                {\r\n                    id: 12,\r\n                    name: \"Alegere prmpt. potenţial cumpărător\",\r\n                    include: \"app/states/dosar/includes/ppc.tpl\"\r\n          },\r\n                {\r\n                    id: 13,\r\n                    name: \"Adresă înaintare / Direcţia Agricolă\",\r\n                    include: \"app/states/dosar/includes/adresaDirAgr.tpl\"\r\n          },\r\n                {\r\n                    id: 14,\r\n                    name: \"PV4 - final (cu preemptori) \",\r\n                    include: \"app/states/dosar/includes/pv4cu.tpl\"\r\n          },\r\n                {\r\n                    id: 15,\r\n                    name: \"PV4 - final (fără preemptori) \",\r\n                    include: \"app/states/dosar/includes/pv4fara.tpl\"\r\n          },\r\n                {\r\n                    id: 17,\r\n                    name: \"Dir.Agricolă - adresă înaintare PV final\",\r\n                    include: \"app/states/dosar/includes/adresaPvFinal.tpl\"\r\n          },\r\n                {\r\n                    id: 18,\r\n                    name: \"1E - Adeverință pentru vânzare liberă \",\r\n                    include: \"app/states/dosar/includes/1E.tpl\"\r\n          },\r\n                {\r\n                    id: 19,\r\n                    name: \"Dir.Agricolă - adresă înaintare 1E\",\r\n                    include: \"app/states/dosar/includes/adresa1E.tpl\"\r\n          },\r\n                {\r\n                    id: 99,\r\n                    name: \"Dir.Agricolă - adresă înaintare comunicare acceptare\",\r\n                    include: \"app/states/dosar/includes/adresaInaintareAcceptare.tpl\",\r\n                    notAMenuItem: true\r\n          }\t                    \r\n       ];\r\n        }\r\n\r\n    }\r\n\r\n})();\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n      .module('app')\r\n      .service('userService', userService);\r\n\r\n  /** @ngInject */\r\n  function userService( API, $http) {\r\n\r\n    this.getCurrentUser = getCurrentUser;\r\n    this.getUser        = getUser;\r\n    this.getUsers       = getUsers;\r\n    this.create         = create;\r\n    this.update         = update;\r\n    this.remove         = remove;\r\n\r\n    function getUsers() {\r\n        \r\n      var resp = $http.post(API +'users/', '' ) \r\n      .then(function(response) {\r\n          return response;\r\n      });\r\n        return resp;\r\n    }\r\n\r\n    function getCurrentUser() {\r\n        var resp = $http.post( API+'users/getUser', '').then( function(r) { return r; } );\r\n        return resp;        \r\n    }\r\n\r\n    function getUser(data) {\r\n        var resp = $http.post( API+'users/getUser', {id:data}).then( function(r) { return r; } );\r\n        return resp;        \r\n    }\r\n      \r\n    function create(data) {\r\n        var resp = $http.post( API+'users/create', data).then( function(r) { return r; } );\r\n        return resp;\r\n    }\r\n\r\n   function update(data) {\r\n       var resp = $http.post( API + 'users/update', data).then( function(r) { return r;} );\r\n       return resp;\r\n   }\r\n      \r\n   function remove(data) {\r\n       var resp = $http.post( API + 'users/delete', {'id':data}).then( function(r) { return r;} );\r\n       return resp;\r\n   }      \r\n      \r\n  }\r\n\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .config(routerConfig);\r\n\r\n    /** @ngInject */\r\n    function routerConfig($stateProvider) {\r\n\r\n        $stateProvider\r\n        .state('index.addressBook', {\r\n            url: '/contacts',\r\n            views: {\r\n                'content@index': {\r\n                    templateUrl: \"app/states/addressBook/main.html\",\r\n                    controller: 'ContactsController',\r\n                    controllerAs: 'vm',\r\n\t\t\t\t\tresolve: {\r\n\t\t\t\t\t\tdata: function(qs, $stateParams, arrays) {\r\n\t\t\t\t\t\t\tvar id = $stateParams.id;\r\n                            return qs.getData({table:'persoane', attributes: ['id', 'name', 'cnp', 'cui'] })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n               \r\n                }\r\n            }\r\n            \r\n        })\r\n        \r\n    }\r\n\r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .controller('ContactsController', ContactsController)\r\n\r\n\r\n    /** @ngInject */\r\n    function ContactsController(data, $stateParams, $state, qs, $log, $mdBottomSheet, gmDialog, httpMessage) {\r\n        var vm = this, item, query, modal, tpl\r\n        \r\n        \r\n\r\n        console.log(data)\r\n        vm.contacts = data\r\n\r\n\r\n        // UPDATE CONTACT\r\n        vm.update = (p) => {\r\nconsole.log(\"pe:\",p)\r\n            //pf\r\n             tpl = (angular.isUndefined(p.cui) || p.cui.length == 0) ? \"main-pf.html\" : \"main-pj.html\"\r\n                \r\n                modal = $mdBottomSheet.show({\r\n                    templateUrl: \"app/states/addressBook/\"+tpl,\r\n                    controller: function(item, $mdBottomSheet, qs) {\r\n                        var vm = this\r\n                        qs.getData({table:'persoane', where:[{id: p.id }]}).then(  r => {\r\n                            console.log(\"persoana\", r)\r\n                            vm.item = r[0]\r\n                            \r\n                            vm.item.content = angular.fromJson(vm.item.content)\r\n                        })\r\n                        \r\n                       \r\n                        vm.close = () => $mdBottomSheet.hide()\r\n                        vm.submit = function(item) { $mdBottomSheet.hide(item) }\r\n                    }, \r\n                    controllerAs: 'vm',\r\n                    clickOutsideToClose: true,\r\n                    locals: { item: vm.item }\r\n                })  \r\n            \r\n             modal.then(r => {\r\n                 if (angular.isDefined(r)) {\r\n                        \r\n                         console.log(\"modal then:\", r)\r\n                         angular.isDefined(r.content) ? r.content = angular.toJson(r.content) : null\r\n                         query = qs.update('persoane', r)\r\n                         query.then((resp) => {\r\n                             console.log(resp, r)\r\n\r\n                             item = data.filter(elem => elem.id == r.id)[0]\r\n                             data[data.indexOf(item)] = r\r\n\r\n                         }, (r) => {\r\n                             // rejection\r\n                             var msg = httpMessage.get(r.status)\r\n                             gmDialog.alert(msg[0].short, msg[0].long, \"ÎNCHIDE\")\r\n\r\n                         })\r\n                     }\r\n\r\n\r\n             }, () => console.log(\"you clicked ouside to close ;)\"))\r\n             }\r\n        \r\n        // CREATE CONTACT\r\n        vm.create = (personType) => {\r\n            tpl = personType == 'pf' ? \"main-pf.html\" : \"main-pj.html\"\r\n            modal = $mdBottomSheet.show({\r\n                templateUrl: \"app/states/addressBook/\"+tpl,\r\n                controller: function($mdBottomSheet) {\r\n                    var vm = this\r\n                    vm.item = {}\r\n                    vm.item.content = {}\r\n                    vm.close = () => $mdBottomSheet.hide()\r\n                    vm.submit = function(item) { $mdBottomSheet.hide(item) }\r\n                }, \r\n                controllerAs: 'vm',\r\n                clickOutsideToClose: true\r\n            })   \r\n            \r\n            modal.then( (r) => {\r\n                angular.isDefined(r.content) ? r.content = angular.toJson(r.content) : null\r\n                query = qs.create('persoane', r)\r\n                query.then( (resp) => {\r\n                    r.id = resp.data.msg;\r\n                    \r\n                    gmDialog.alert(\"SUCCES!\", \"Persoana \" + r.name + \" a fost adăugată în agendă!\", \"ÎNCHIDE\")\r\n                    .then( () => { data.push(r)} ) \r\n                    \r\n                }, (r) => {\r\n                    // rejection\r\n                    var msg = httpMessage.get(r.status)\r\n                    gmDialog.alert(msg[0].short, msg[0].long, \"ÎNCHIDE\")\r\n\r\n                })\r\n            })\r\n        }\r\n        \r\n\r\n\r\n        vm.submit = (item) => {\r\n            if (angular.isUndefined(item.id)) {\r\n                //create\r\n                $log.info(\"create:\", item)\r\n            }\r\n\r\n            if (angular.isDefined(item.id)) {\r\n                //update\r\n                $log.info(\"update:\", item)\r\n            }\r\n        }\r\n\r\n        vm.remove = item => {\r\n            var dialog = gmDialog.confirm(item, \"ATENȚIE\", \"Veți șterge definitiv persoana!\", \"DA\", \"NU\")\r\n            dialog.then( ()=> {\r\n                qs.remove('persoane', item.id)\r\n                    .then( \r\n                    r =>  {\r\n                        if ( r.ok == true ) {\r\n                            gmDialog.alert(\"SUCCES!\", \"Ștergea contactului \"+ item.name +\" a fost realizată!\", \"ÎNCHIDE\")\r\n                            .then( () => {\r\n                                var item = data.filter( elem => elem.id == r.data.msg)[0];\r\n                                data.splice(data.indexOf(item),1);                        \r\n                            })                        \r\n                    } else {\r\n                        gmDialog.alert(r.data.msg.name|| \"EROARE\", r.data.sqlMessage || \"persoana are dosare\" , \"ÎNCHIDE\")\r\n                    }\r\n\r\n\r\n                    }, err => {\r\n                    // rejection\r\n                    console.log(\"rejection!!!\")\r\n                    gmDialog.alert(err.msg.name, err.sqlMessage, \"ÎNCHIDE\")\r\n\r\n                })                \r\n            })\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .config(routerConfig);\r\n\r\n    /** @ngInject */\r\n    function routerConfig($stateProvider, $urlRouterProvider) {\r\n\r\n        $stateProvider\r\n            .state('index', {\r\n                abstract: true,\r\n                views: {\r\n                    '@': {\r\n                        templateUrl: 'app/states/_main/main.html',\r\n                        controller: 'MainController',\r\n                        controllerAs: 'vm'\r\n                    },\r\n                    'navleft@index': {\r\n                        templateUrl: 'app/states/_main/partials/navleft.html'\r\n                    },\r\n                    'toolbars@index': {\r\n                        templateUrl: 'app/states/_main/partials/toolbars.html'\r\n                    },\r\n                    'content@index': {\r\n                        templateUrl: 'app/states/_main/partials/content.html'\r\n                    }\r\n                    \r\n\r\n                },\r\n\t\t\t\tcontroller: function(localStorageService, $state) {\r\n\t\t\t\t\t  if (  localStorageService.get('apikey') ==  null ) {\r\n\t\t\t\t\t\t  $state.go('login');\r\n\t  \t\t\t\t\t}\t\r\n\t\t\t\t},\r\n                controllerAs:\"vm\"\r\n\r\n            })\r\n        .state('index.main', {\r\n                url: '/'\r\n            });\r\n\r\n        $urlRouterProvider.otherwise('/');\r\n    }\r\n\r\n})();\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .controller('ListBottomSheetController', ListBottomSheetController);\r\n\r\n  /** @ngInject */\r\n  function ListBottomSheetController($mdBottomSheet, $state) {\r\n      var vm = this;\r\n      \r\n\r\n      vm.items = [\r\n\r\n        { name: 'Registru general', icon: 'maps:ic_local_library_24px', state: 'index.registru' },\r\n        { name: 'Management contacte', icon: 'action:ic_power_settings_new_24px', state:  \"index.addressBook\" },\r\n        { name: 'Setări aplicație', icon: 'action:ic_settings_24px', state: 'index.settings' },\r\n        { name: 'IEȘIRE', icon: 'action:ic_power_settings_new_24px', state: 'logout' }\r\n\r\n      ];\r\n\r\n      vm.itemClick = function($index) {\r\n        var clickedItem = vm.items[$index];\r\n        $mdBottomSheet.hide(clickedItem);\r\n        $state.go(clickedItem.state);\r\n      };\r\n  }\r\n  \r\n    \r\n\r\n    \r\n\r\n})();\r\n\n(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .controller('MainController', MainController);\n\n    /** @ngInject */\n    function MainController( $rootScope, APP, homePage, localStorageService, $state, $mdBottomSheet, $mdSidenav, gmDialog, $log, menuService ) {\n        var vm = this;\n        vm.app = APP;\n      \n        vm.local = localStorageService.get('user');\n\n        vm.title = APP.name;\n        vm.version = APP.version;\n        vm.appName = APP.name;\n\n        vm.appVersion = APP.version;\n        vm.leftMenu = menuService.left();\n        vm.mainMenu = menuService.main();\n\n        if (localStorageService.get('apikey') == null) {\n            $state.go('login');\n        }\n\n\n        //toggle chidren (item)\n\n        vm.toggleChildren = function (index) {\n            angular.forEach(vm.mainMenu[index].children, function (e, i) {\n                vm.mainMenu[index].children[i].visibility = !vm.mainMenu[index].children[i].visibility;\n            })\n        }\n\n\n        // Toolbar search toggle\n        vm.toggleSearch = function () {\n            vm.showSearch = !vm.showSearch;\n            if ( vm.showSearch == false ) { vm.searchCriteria = '';}\n        };\n\n        // Sidenav toggle\n        vm.toggleSidenav = function (menuId) {\n            // fix for overlapping on larger page (gabizz)\n           // var pageWidth = angular.element($window).width();\n\n            //          if (pageWidth < 1200 ) {\n            $mdSidenav(menuId).toggle();\n            //          }\n\n        };\n\n\n        // Bottomsheet & Modal Dialogs\n        vm.alert = '';\n        vm.showListBottomSheet = function ($event) {\n            vm.alert = '';\n            $mdBottomSheet.show({\n                templateUrl: 'app/states/_main/listBottomSheet.template.html',\n                controller: 'ListBottomSheetController',\n                controllerAs: 'libo',\n                targetEvent: $event\n            });\n        };\n\n        vm.previousState = \"index.main\";\n      \n        //states tracking\n        $rootScope.currentState;\n        $rootScope.previousState;\n        // $rootScope.$on('$stateChangeSuccess', function (ev, to, toParams, from, fromParams) {\n        $rootScope.$on('$stateChangeSuccess', function (ev, to, toParams, from, fromParams) {\n\n            $rootScope.previousState = from.name;\n            $rootScope.currentState = to.name;\n            vm.currentState = to.name;\n            vm.previousState =  from.name;\n            vm.fromParams = fromParams;\n         //   console.log(\"States: previous:\", vm.previousState, \" current:\", vm.currentState);\n        //   console.log(\"States,\", vm.previousState, vm.currentState);\n            if ( vm.currentState == \"index.main\" )  { vm.title = APP.name; }\n\n        });\n        \n       \n\n\n\n\n\n\n\n    }\n\n\n})();\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n    $stateProvider\r\n      .state('index.alerts', {\r\n        url: '/alerts',\r\n        views: {\r\n             'content@index': {\r\n                templateUrl: 'app/states/alerts/main.html',\r\n                controller: 'AlertsController',\r\n                controllerAs: 'vm'               \r\n             }\r\n        }\r\n\r\n        })\r\n        \r\n\r\n      \r\n  }\r\n\r\n    \r\n})();\r\n \n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .controller( \"AlertsController\", AlertsController);\r\n    \r\n      /** @ngInject */\r\n    \r\n    function AlertsController($scope) {\r\n        \r\n        var vm = this;\r\n        $scope.$parent.vm.title = \"Alerte și notificări\";\r\n   \r\n        vm.item = null; \r\n    }\r\n    \r\n})();\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .controller( \"PeopleController\", PeopleCtrl);\r\n    \r\n      /** @ngInject */\r\n    \r\n    function PeopleCtrl(action, qs, $mdBottomSheet) {\r\n        \r\n        var vm = this;\r\n        vm.item = {};\r\n        var query;\r\n\r\n        vm.action = action;\r\n        \r\n      \r\n        vm.close = function() { $mdBottomSheet.hide() };\r\n        \r\n        vm.submit = function(item) {\r\n\r\n            item.content = angular.toJson(item.content);\r\n            \r\n            query = qs.create('persoane', item);\r\n            \r\n            query.then( (r) => {\r\n\r\n                item.id = r.data.msg;\r\n                item.content = angular.fromJson(item);\r\n                $mdBottomSheet.hide(item);\r\n            })\r\n        \r\n        };\r\n    }\r\n    \r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .config(routerConfig);\r\n\r\n    /** @ngInject */\r\n    function routerConfig($stateProvider) {\r\n        \r\n\r\n        $stateProvider\r\n            .state('index.document', {\r\n                url: '/document/:id',\r\n                views: {\r\n                    'content@index': {\r\n                        templateUrl: 'app/states/document/main.html',\r\n                        controller: 'DocumentController',\r\n                        controllerAs: 'vm',\r\n                        resolve: {\r\n                            id: $stateParams  =>  $stateParams.id,\r\n                            tipdoc: qs => qs.getData({table:'set_tipdoc', attributes: ['id', 'name'] }),\r\n                            registru:   function(qs, id) { \r\n                                return  qs.getDosare( {where:[{id:id }]})\r\n                                    .then( (resp) => {\r\n                                        return resp.rows[0] || {}\r\n                                    })\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n})();\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .controller( \"DocumentController\", DocumentController);\r\n    \r\n      /** @ngInject */\r\n    \r\n    function DocumentController( $scope , registru, tipdoc,  arrays, $mdDialog, gmDialog, $mdBottomSheet, $log, qs, $q, $mdToast, $timeout, moment) {\r\n         \r\n        console.log(tipdoc)\r\n        var vm = this\r\n        vm.rmQue={parti:[], mandatari:[]}\r\n        \r\n        $scope.$parent.vm.title = \"DOCUMENT\"\r\n       \r\n    \r\n\r\n      //  registru = registru.length > 0 ? registru[0] : [];\r\n        vm.registru = registru\r\n        vm.parti = registru.partis\r\n\r\n\r\n        vm.registru.data = moment(vm.registru.data*1000).toDate()\r\n        \r\n        if ( registru.parent == 0 && vm.registru.detalii) {\r\n            vm.registru.detalii.data.dataStart = moment(vm.registru.detalii.data.dataStart*1000).toDate() \r\n            vm.registru.detalii.data.dataEnd = moment(vm.registru.detalii.data.dataEnd*1000).toDate() \r\n            vm.durata = moment(vm.registru.detalii.data.dataEnd).diff(moment(vm.registru.detalii.data.dataStart), \"years\");            \r\n            \r\n         \r\n        } else if ( registru.parent == 0 && !vm.registru.detalii ) {\r\n            vm.registru.detalii = {data:{dataStart: moment().toDate(), dataEnd: moment().toDate(), durata:0}}\r\n            \r\n        }\r\n        \r\n        // calcul durata on change\r\n        vm.calculDurata = (changedElem) => {\r\n            let start = moment(vm.registru.detalii.data.dataStart)\r\n            let end = moment(vm.registru.detalii.data.dataEnd)\r\n            switch ( changedElem ) {\r\n                case 'start' :  vm.durata = end.diff(start, 'years')\r\n                break\r\n                case 'end'   : vm.durata =  end.diff(start, 'years')\r\n                break\r\n                case 'interval': \r\n\r\n\r\n                    vm.registru.detalii.data.dataEnd = start.add(vm.durata, 'years').toDate();\r\n                break\r\n            }\r\n\r\n        }           \r\n    \r\n        \r\n        // calcul total anexe initial\r\n        if ( vm.registru.parent == 0 && vm.registru.anexes.length > 0 ){\r\n            vm.sumAnexe = 0 \r\n            \r\n            vm.registru.anexes.map( e => {\r\n                e.ha = e.ha ? e.ha : 0\r\n                vm.sumAnexe += +e.ha\r\n            })\r\n            vm.sumAnexe = Math.round(vm.sumAnexe * 100) / 100\r\n        }\r\n\r\n        \r\n        // get element which is \"CONTRACT\"\r\n        vm.documentType = angular.copy(tipdoc).filter( (item) => item.id == registru.docType && item.name == \"CONTRACT\");\r\n        vm.documentType.length > 0 ? vm.documentType = vm.documentType[0].id : null\r\n        \r\n        //edit PARTE\r\n        vm.edit = item => {\r\n            // add through edit controller tweak (creating an valid editable object for edit modal)\r\n            if (!angular.isObject(item) ) {\r\n                item =  {\r\n                    id: null,\r\n                    parent: registru.id,\r\n                    persoana: '',\r\n                    calitate: item,\r\n                    cId: registru.cId,\r\n                    uId: registru.uId,\r\n                    accessType: registru.accessType,\r\n                    persoane: {name: ''},\r\n                    mandataris: []\r\n                }\r\n            }\r\n            $mdDialog\r\n                .show({\r\n                    templateUrl: \"./app/states/document/editParteModal.html\",\r\n                    controller: 'EditParteController',\r\n                    controllerAs: 'vm',\r\n                    locals: {item : item},\r\n                    clickOutsideToClose: true\r\n                })\r\n                .then( r => {\r\n                console.log( r )\r\n                if (r.success) {\r\n                    qs.getDosare( {where:[{id:vm.registru.id }]})\r\n                        .then( resp =>  {\r\n                            vm.registru = resp.rows[0] \r\n                            vm.registru.data = moment(vm.registru.data*1000).toDate()\r\n                            if ( vm.registru.detalii ) {\r\n                                vm.registru.detalii.data.dataStart = moment(vm.registru.detalii.data.dataStart*1000).toDate()\r\n                                vm.registru.detalii.data.dataEnd = moment(vm.registru.detalii.data.dataEnd*1000).toDate()  \r\n                                \r\n\r\n                            }\r\n                                           \r\n                        })                    \r\n                }\r\n            }, err => err)\r\n        }\r\n        \r\n        // REMOVE PARTE\r\n        vm.removeParte = item => {\r\n            let confirmation =  gmDialog.confirm('', \"Veți elimina titularul \" + item.persoane.name + \" (și eventualii mandatari)!\", \" DORIȚI ÎNTR-ADEVĂR SĂ CONTINUAȚI?\", \"DA\", \"NU\")\r\n            \r\n            let promises = []\r\n            confirmation.then( resp => {\r\n                if ( resp ) {\r\n                    \r\n                    // remove mandatar if exists\r\n                    if ( item.mandataris.length == 0 ) {\r\n                        promises.push($q.resolve())\r\n                    } else { \r\n                        promises.push( qs.remove( 'mandatari', item.mandataris[0].id ))\r\n                    }\r\n                    // remove persoana\r\n                    promises.push( qs.remove( 'parti', item.id ))\r\n                }\r\n                \r\n                $q.all(promises).then( () => {\r\n                    qs.getDosare( {where:[{id:vm.registru.id }]})\r\n                        .then( resp =>  {\r\n                            vm.registru = resp.rows[0] \r\n                            vm.registru.data = moment(vm.registru.data*1000).toDate()\r\n                            if ( vm.registru.detalii ) {\r\n                                vm.registru.detalii.data.dataStart = moment(vm.registru.detalii.data.dataStart*1000).toDate()\r\n                                vm.registru.detalii.data.dataEnd = moment(vm.registru.detalii.data.dataEnd*1000).toDate()                                \r\n                            }\r\n                                          \r\n                        })\r\n                })\r\n                    \r\n            }, err => console.log(\"no\"))\r\n            \r\n        }\r\n        \r\n        // DETALII FORM WATCHER // add or update 'detalii'\r\n        vm.submitDetalii = formData => {\r\n            console.log(formData)\r\n            $timeout( ()=> {\r\n                let postdata = {}\r\n                formData.id = typeof formData.id !== 'undefined' ? formData.id : null\r\n                //prepare diferent object for contract and conex\r\n                if ( vm.registru.parent == 0 ) {\r\n                    postdata = {\r\n                        id: formData.id,\r\n                        parent: vm.registru.id,\r\n                        cId: formData.cId, uId: formData.uId, accessType: formData.accessType,\r\n                        data: angular.toJson({\r\n                            dataStart: moment(formData.data.dataStart).unix(),\r\n                            dataEnd: moment(formData.data.dataEnd).unix(),\r\n                            catTeren: formData.data.catTeren,\r\n                            ha: formData.data.ha,\r\n                            pret: formData.data.pret,\r\n                            explicatii: formData.data.explicatii,\r\n                            continut: formData.data.continut\r\n                        })\r\n                    }                    \r\n                } else {\r\n                    postdata = {\r\n                        id: formData.id,\r\n                        parent: vm.registru.id,\r\n                        cId: formData.cId, uId: formData.uId, accessType: formData.accessType,\r\n                        data: angular.toJson({content: formData.data.content})\r\n                    }\r\n                }\r\n                \r\n                // create or update based on item id existance\r\n                if ( postdata.id == null) {\r\n                    //create\r\n                    delete(postdata.id)\r\n                    qs.create('detalii', postdata).then( r => {\r\n                        vm.registru.detalii.id = r.data.msg.id\r\n                        gmDialog.toast('created!')\r\n                    } , err => console.log(err))\r\n                } else {\r\n                    //update\r\n                    qs.update('detalii', postdata).then( ()=> gmDialog.toast(\"updated!\"))\r\n                }\r\n               \r\n\r\n               \r\n            }, 500)\r\n\r\n        } \r\n        \r\n        \r\n        // ANEXE FORM WATCHER\r\n        vm.submitAnexe = anexe => {\r\n            vm.sumAnexe = 0\r\n            anexe.map( e => {\r\n                vm.sumAnexe += +e.ha\r\n                if ( !e.id ) {\r\n                    qs.create('anexe', e).then( r => {\r\n                    let anexa = vm.registru.anexes[vm.registru.anexes.indexOf(e)]\r\n                    anexa.id = r.data.msg.id\r\n                    })\r\n                    \r\n                } else {\r\n                    qs.update('anexe', e )\r\n                }\r\n            })\r\n            console.log(\"suma\", vm.sumAnexe)\r\n        }\r\n        \r\n        // ANEXA REMOVER\r\n        \r\n        vm.removeAnexa = item => {\r\n            gmDialog.confirm('','ATENȚIE!', 'se va șterge definitiv această anexă!', 'DA', 'NU')\r\n            .then( ()=> {\r\n                qs.remove('anexe', item)\r\n                    .then( ()=>{\r\n                        vm.registru.anexes.splice(vm.registru.anexes.indexOf(item), 1)\r\n                    }, (err)=> console.log(\"could not delete anexa.. reason:\", err))\r\n            }, ()=>{})\r\n        }\r\n\r\n    } \r\n    \r\n})();\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .controller( \"EditParteController\", EditParteController);\r\n    \r\n      /** @ngInject */\r\n    \r\n    function EditParteController( item, $mdDialog, arrays, qs, $q) {\r\n        \r\n        let vm = this;\r\n        vm.item = {}\r\n        vm.item.titular =  {\r\n            \"id\": item.id,\r\n            \"parent\": item.parent,\r\n            \"persoana\": item.persoana,\r\n            \"calitate\": item.calitate,\r\n            \"cId\": item.cId,\r\n            \"uId\": item.uId,\r\n            \"accessType\": item.accessType,\r\n            \"name\": item.persoane.name,\r\n        }\r\n        \r\n        if ( item.mandataris.length>0) {\r\n            vm.item.mandatar =  \r\n                {\r\n                    \"id\": item.mandataris[0].id || null,\r\n                    \"parte\": item.mandataris[0].parte || null,\r\n                    \"persoana\": item.mandataris[0].persoana || null,\r\n                    \"calitate\": item.mandataris[0].calitate || 'mandatar',\r\n                    \"cId\": item.mandataris[0].cId || item.cId,\r\n                    \"uId\": item.mandataris[0].uId || item.uId,\r\n                    \"accessType\": item.mandataris[0].accessType || item.accessType,\r\n                    \"name\": item.mandataris[0].persoane.name || null\r\n                }\r\n            \r\n        }\r\n        vm.close = () => $mdDialog.hide()\r\n\r\n//        AUTCOMPLETE SHIT (persoana)\r\n        vm.foundPers = []\r\n        vm.searchText = vm.item.titular.name     \r\n        vm.searchTextChange = pers => { \r\n            if ( pers.length == 0 ) {\r\n                vm.item.titular.persoana = null\r\n                vm.item.titular.name = null\r\n            }\r\n            qs.lookup('persoane', {\r\n                lookInto: ['name'],\r\n                attributes: ['id', 'name'],\r\n                keyword: pers ? pers.toUpperCase() : null\r\n            }).then( r => {vm.foundPers = r.data;}, err => vm.foundPers = [])\r\n        }\r\n        vm.selectedItemChange = item => {\r\n            if (item) {\r\n                vm.item.titular.persoana = item.id\r\n                vm.item.titular.name = item.name\r\n            }    \r\n        }\r\n//        END AUTOCOMPLETE SHIT  (persoana)       \r\n\r\n//        AUTCOMPLETE SHIT (mandatar)\r\n        vm.foundPersM = []\r\n        vm.searchTextM = typeof vm.item.mandatar !== 'undefined' && typeof vm.item.mandatar.name !== 'undefined' ? vm.item.mandatar.name : null\r\n        vm.searchTextChangeM = pers => { \r\n            if ( pers.length == 0 ) {\r\n                vm.item.mandatar.persoana = null\r\n                vm.item.mandatar.name = null\r\n            }            \r\n            qs.lookup('persoane', {\r\n                lookInto: ['name'],\r\n                attributes: ['id', 'name'],\r\n                keyword: pers ? pers.toUpperCase() : null\r\n            }).then( r => {vm.foundPersM = r.data;}, err => vm.foundPersM = [])\r\n        }\r\n        vm.selectedItemChangeM = item => {\r\n            if (item) {\r\n               vm.item.mandatar.persoana = item.id\r\n               vm.item.mandatar.name = item.name\r\n            }    \r\n        }\r\n//        END AUTOCOMPLETE SHIT  (mandatar)  \r\n        \r\n\r\n//        add blank mandatar if not exists\r\n    \r\n        vm.addMandatarBlank = item => {\r\n            item.mandatar = {\r\n                parte: item.id, \r\n                persoana: null, \r\n                calitate: 'mandatar', \r\n                cId: vm.item.titular.cId, uId: vm.item.titular.uId, accessType: vm.item.titular.accessType,\r\n                name : null\r\n            }\r\n        }\r\n\r\n        //submit data, add-modify to db, fetch the modified document object and send it back to DocumentController\r\n        \r\n        vm.submit = item => {\r\n            //persona \r\n            let promises = []\r\n            //add if id is null\r\n            if ( item.titular.id == null ) {\r\n                console.log('add')\r\n                delete(item.titular.id)\r\n                promises.push(qs.create('parti', item.titular))\r\n                \r\n            } \r\n            //mod if id exists\r\n            if ( item.titular.id != null ) {\r\n               promises.push(qs.update('parti', item.titular))\r\n            }\r\n            //mandatar add if exists\r\n            if ( ! item.mandatar ) {\r\n                promises.push($q.resolve())\r\n            } else {\r\n                promises[0].then( resp => {\r\n                    // treat create/update responses differently\r\n                    console.log(resp)\r\n                    //when updating titular\r\n                    if ( angular.isArray(resp.data.msg) ) {\r\n                        item.mandatar.parte = item.titular.id\r\n                    } else {\r\n                        item.mandatar.parte = resp.data.msg.id\r\n                    }\r\n                    \r\n                    // if no id, create mandatar\r\n                    if ( item.mandatar.id == null ) {\r\n                        delete(item.mandatar.id)\r\n                        promises.push(qs.create('mandatari', item.mandatar))\r\n                    } else {\r\n                        promises.push(qs.update('mandatari', item.mandatar))\r\n                    }\r\n                })\r\n            }\r\n            \r\n            $q.all(promises).then( () => {\r\n               $mdDialog.hide({success: true})\r\n                \r\n            }, err => console.log({err:err}))\r\n        }\r\n\r\n        \r\n        \r\n    }\r\n})();\n(function() {\n  'use strict';\n\n  angular\n    .module('app')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider) {\n    $stateProvider\n      .state('exception', {\n        url: '/exception/:id',\n        templateUrl: 'app/states/exception/template.html',\n        controller: 'ExceptionController',\n        controllerAs: 'vm',\n        resolve: {\n            errId: function($stateParams) {\n                return $stateParams.id;\n            }\n        }\n        \n\n      })\n  }\n\n    \n})();\n \n(function() {\r\n  'use strict';\r\n  angular\r\n    .module('app')\r\n    .controller('ExceptionController', ExceptionController);\r\n  /** @ngInject */\r\n  function ExceptionController( errId, httpMessage) {\r\n      \r\n      var vm = this;\r\n      \r\n      \r\n      \r\n      vm.error = httpMessage.get(errId)[0];\r\n   \r\n      \r\n  }\r\n})();\n(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .config(routerConfig);\n\n    /** @ngInject */\n    function routerConfig($stateProvider) {\n\n        $stateProvider\n\n\n        .state('login', {\n            url: '/login',\n            templateUrl: 'app/states/login/login.main.html',\n            controller: 'LoginController',\n            controllerAs: 'vm'\n\t\t\t\n        })\n        .state('logout', {\n            url: '/logout',\n            template: '<div></div>',\n            controller: 'LogoutController',\n            controllerAs: 'vm'\n        })\n\n    }\n\n})();\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .controller('LoginController', LoginController)\r\n        .controller('LogoutController', LogoutController);\r\n\r\n    /** @ngInject */\r\n    function LoginController($log, authService, localStorageService, $state, APP, $mdDialog, gmDialog) {\r\n        var vm = this;\r\n        vm.app = APP;\r\n\r\n        vm.submit = function (data) {\r\n            authService.login(data).then(function (r) {\r\n\r\n                if (typeof r.uid != 'undefined') {\r\n                    localStorageService.set('uid', parseInt(r.uid));\r\n                    localStorageService.set('apikey', r.hash);\r\n                    localStorageService.set('user', r);\r\n                    $state.go('index.main');\r\n                }\r\n                if (r.ok == false) {\r\n                    gmDialog.alert(\"EROARE\", \"Eroare autentificare\", \"INCHIDE\");\r\n                }\r\n            });\r\n        }\r\n        if (localStorageService.get('apikey') != null) {\r\n            $state.go('index.main');\r\n        }\r\n\r\n        vm.articleContent = function (art) {\r\n            var modal = $mdDialog.show({\r\n                templateUrl: 'app/states/_main/partials/artContentModal.tpl',\r\n                controller: function (item, $mdDialog) {\r\n                    var vm = this;\r\n                    vm.item = item;\r\n                    vm.close = function () {\r\n                        $mdDialog.hide();\r\n                    }\r\n                },\r\n                controllerAs: 'vm',\r\n                locals: {\r\n                    item: art\r\n                },\r\n                clickOutsideToClose: true\r\n            });\r\n            modal.then(function(r) { return r;})\r\n        }\r\n    }\r\n\r\n    function LogoutController($log, authService, localStorageService, $state) {\r\n        authService.logout()\r\n            .then(function () {\r\n                localStorageService.remove('uid');\r\n                localStorageService.remove('user');\r\n                localStorageService.remove('apikey');\r\n                $state.go('login');\r\n            })\r\n    }\r\n\r\n\r\n\r\n\r\n})();\n(function () {\r\n    'use strict';\r\n    angular\r\n        .module('app')\r\n        .config(routerConfig);\r\n    /** @ngInject */\r\n    function routerConfig($stateProvider) {\r\n        $stateProvider\r\n            .state('index.registru', {\r\n                url: '/registru',\r\n                views: {\r\n                    'content@index': {\r\n                        templateUrl: 'app/states/registru/main.html',\r\n                        controller: 'RegistruController',\r\n                        controllerAs: 'vm',\r\n                        resolve: {\r\n                            tipdoc: qs => qs.getData({table:'set_tipdoc', attributes: ['id', 'name'] })\r\n                        }\r\n                    }\r\n                }\r\n        })\r\n        \r\n    }\r\n})();\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .controller( \"addDocumentController\", addDocumentController);\r\n    \r\n      /** @ngInject */\r\n    \r\n    function addDocumentController ( contracte, maxNumber, $state, $mdBottomSheet, qs, tipdoc,  arrays, $log, moment) {\r\n        var vm=this;\r\nconsole.log(\"max\", maxNumber)\r\n       \r\n       vm.tipdoc = tipdoc\r\n        \r\n       vm.contracte = contracte\r\n\r\n       vm.item = {}\r\n       \r\n        // show/hide \"pentru contractul\"\r\n        vm.docTypeChanged = (elem) => { \r\n            var docType = tipdoc.filter( (e) => { return e.id == elem })[0];\r\n            if ( docType.name == \"CONTRACT\" ) {\r\n                vm.showParentSelector = false\r\n                vm.item.parent = 0 \r\n            } else {\r\n                vm.showParentSelector = true \r\n            }\r\n        }\r\n        //show posible parents for \"pentru contractul\"       \r\n        \r\n        vm.item = {}\r\n        vm.item.nr = parseInt(maxNumber)+1\r\n        vm.item.data = new Date()\r\n\r\n       \r\n        \r\n        vm.close = function() { $mdBottomSheet.hide(); }\r\n        \r\n        vm.submit = function() { \r\n            $mdBottomSheet.hide(vm.item).then(function(r) {\r\n              r.data = moment(r.data).unix();\r\n              r.accessType = \"shared\";\r\n              qs.create('registru', r)\r\n                .then(\r\n                  function(resp) {\r\n                     \r\n                      if ( resp.data.ok == true ) {\r\n                          $state.go(\"index.document\", {id:resp.data.msg.id});\r\n                      }\r\n                  },\r\n                  function() { $log.info(\"err\"); })\r\n            })\r\n        }\r\n                                              \r\n    }\r\n    \r\n})();\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .controller( \"IstoricController\", IstoricController);\r\n    \r\n      /** @ngInject */\r\n    \r\n    function IstoricController(item, reg, $mdDialog, arrays) {\r\n        var vm = this;\r\n        console.log(item)\r\n        vm.item = item;\r\n        vm.reg = reg;\r\n        vm.close = function() { $mdDialog.hide(); }\r\n\r\n         if ( vm.item.docType != 0) {\r\n             vm.parent  =  angular.copy(reg).filter( (elem) =>  elem.parent == item.id );\r\n             //vm.item.detalii = {};\r\n             console.log(vm.parent);\r\n             \r\n             vm.item = arrays.jsonify(vm.item);\r\n           //  vm.item.detalii.data = angular.fromJson(vm.item.detalii.data);\r\n         }\r\n        \r\n        \r\n    }\r\n})();    \n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .controller( \"RegistruController\", RegistruController);\r\n    \r\n      /** @ngInject */\r\n    \r\n    function RegistruController($scope,  tipdoc, $stateParams, $mdBottomSheet, $mdDialog, gmDialog, localStorageService, qs) {\r\n\r\n        let vm = this\r\n        let defaultItemsPerPage = vm.pagination ? vm.pagination.length : 50\r\n\r\n        if ( !localStorageService.get('pagination') ) {\r\n            qs.getDosare({offset:0, limit: defaultItemsPerPage}).then( result => {\r\n                vm.reg = result\r\n                vm.pages = getPagination(result.count, defaultItemsPerPage)\r\n                vm.selectedPage = vm.pages[0]\r\n            })\r\n            \r\n        } else {\r\n            vm.pages = localStorageService.get('pagination')\r\n            let selectedPage = vm.pages.filter( item => item.default == true )\r\n            qs.getDosare({ offset:selectedPage[0].offset, limit: selectedPage[0].limit}).then( result => vm.reg = result)\r\n            vm.selectedPage = selectedPage[0]\r\n        }\r\n        \r\n        vm.setSelectedPage = page => {\r\n            page = page || vm.selectedPage\r\n            qs.getDosare({offset:page.offset, limit: page.limit}).then( result => {  vm.reg = result })\r\n            vm.pages.map (e => {   page == e ? e.default = true : delete(e.default) })\r\n            localStorageService.set('pagination', vm.pages)\r\n            vm.selectedPage = vm.pages[vm.pages.indexOf(page)]\r\n\r\n        }\r\n        \r\n        vm.changePagination = itemsPerPage => {\r\n            \r\n            if ( itemsPerPage == \"toate\") {\r\n                let confirm = gmDialog.confirm(\"\",\"Dacă aveți un număr mare de dosare, această operațiune poate dura destul de mult!\", \"Sunteți sigur?\",  \"DA, le vreau pe toate\",  \"NU, arată-mi câte 100/pagină\")\r\n                confirm.then(  resp => { \r\n                    resp == true ? itemsPerPage = 99999 : itemsPerPage = 100\r\n                    vm.pages = getPagination(vm.reg.count, itemsPerPage) \r\n                    vm.pages[0].default = true\r\n                    vm.selectedPage = vm.pages[0]\r\n                    localStorageService.set('pagination', vm.pages)   \r\n                }, (err) => {\r\n                    itemsPerPage = 100\r\n                    vm.pages = getPagination(vm.reg.count, itemsPerPage) \r\n                    vm.pages[0].default = true\r\n                    vm.selectedPage = vm.pages[0]\r\n                    localStorageService.set('pagination', vm.pages)                       \r\n                })\r\n            } else {\r\n                vm.pages = getPagination(vm.reg.count, itemsPerPage) \r\n                vm.pages[0].default = true\r\n                vm.selectedPage = vm.pages[0]\r\n                localStorageService.set('pagination', vm.pages)                 \r\n            }\r\n\r\n        }\r\n        \r\n        vm.pageTick = action => {\r\n            \r\n            let pageNumber = vm.selectedPage.pageNumber\r\n            vm.pages.map( e => e.default ? delete(e.default) : null )\r\n            if ( pageNumber != 1 && action == \"prev\" ) {\r\n                let prevPage = vm.pages.filter( elem => elem.pageNumber == pageNumber-1 )[0]\r\n                prevPage.default = true\r\n                vm.selectedPage = prevPage\r\n            }\r\n            if ( pageNumber != vm.pages.length && action == \"next\" ) {\r\n                let nextPage = vm.pages.filter( elem => elem.pageNumber == pageNumber+1 )[0]\r\n                nextPage.default = true\r\n                vm.selectedPage = nextPage\r\n            } \r\n            if ( action == \"start\" ) {\r\n                vm.pages[0].default = true\r\n                vm.selectedPage = vm.pages[0]\r\n            }\r\n            if ( action == \"end\" ) {\r\n                vm.pages[vm.pages.length-1].default = true\r\n                vm.selectedPage = vm.pages[vm.pages.length-1]\r\n            }            \r\n        }\r\n\r\n        //add new item\r\n        vm.add = function() {\r\n        var addModal = $mdBottomSheet.show({\r\n                templateUrl: \"app/states/registru/addDocument.form.html\",\r\n                controller: \"addDocumentController\",\r\n                controllerAs: 'vm',\r\n                clickOutsideToClose: true,\r\n                locals: {\r\n                    tipdoc: tipdoc\r\n                },\r\n                resolve: {\r\n                    contracte: qs => qs.getData({table: 'registru', where:[{parent:0}], attributes: ['id', 'nr', 'data']}),\r\n                    maxNumber: qs => qs.max('registru', 'nr').then( r => r.data.max, err=> err)\r\n                }\r\n            });\r\n            \r\n            addModal.then(function(r) { return r;}, ()=>{})\r\n/*            addModal.then(function(r) {\r\n                r.docTypeLabel = vm.tipdoc.filter(function(e) { return e.id == r.docType})[0].name;\r\n                vm.registru.push(r);\r\n            }, \r\n            function() { console.log('err');})*/\r\n        }\r\n\r\n        vm.search = function() { \r\n            vm.searchActive = !vm.searchActive;\r\n            if (vm.searchActive == false) { \r\n                vm.searchCriteria = '';\r\n            }\r\n\r\n        }\r\n        \r\n    vm.filter = state => {\r\n        let initReg = angular.copy(vm.reg)\r\n        \r\n        if (state == true ) {\r\n            let filterModal = $mdDialog.show({\r\n                templateUrl: 'app/states/registru/filter/filterModal.html',\r\n                controller: 'FilterController',\r\n                controllerAs: 'vm',\r\n                clickOutsideToClose: true,\r\n                locals: {\r\n                    tipdoc: tipdoc\r\n                }\r\n            })\r\n        }\r\n    }\r\n        \r\n\r\n        \r\n        //remove item from registru        \r\n        vm.remove = function (item) {\r\n            console.log(item)\r\n            var rmConfirm = gmDialog.confirm(\"STERGERE CONTRACT\", \"ATENTIE\", \"Se va șterge documentul și eventualele documente conexe!\", \"DA\", \"NU\");\r\n\r\n            rmConfirm.then(function (resp) {\r\n                if (resp == true) {\r\n                    //deletion -- needs new Express endpoint for dosar deletion!!!\r\n                }\r\n            })\r\n    }\r\n        //end remove item from registru\r\n\r\n\r\n         \r\n         \r\n    }\r\n    \r\n    \r\n    function getPagination(len, ipp) {\r\n        let pages = Math.round(len/ipp)\r\n        if ( len & ipp != 0 ) { pages = pages+1 }\r\n        let paginator = [];\r\n        let pageNumber = 0\r\n        for ( var i = 0; i < len; i += ipp ) {\r\n            pageNumber++\r\n            paginator.push({\r\n                pageNumber: pageNumber,\r\n                offset: i,\r\n                limit: ipp\r\n            })\r\n        }\r\n        return paginator\r\n        \r\n        \r\n    }\r\n    \r\n})();\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n    $stateProvider\r\n      .state('index.settings', {\r\n        url: '/settings',\r\n        views: {\r\n             'content@index': {\r\n                templateUrl: 'app/states/settings/main.html',\r\n                controller: 'SettingsController',\r\n                controllerAs: 'vm',\r\n                resolve: {\r\n                        settings: function(qs, $q) {\r\n\r\n                            var p1 = qs.get('settings').then(function(r) { return r.data.result; }, function() { return null;} );\r\n                            var p2 = qs.get('set_tipdoc').then(function(r) { return r.data.result; }, function() { return null; } );\r\n\r\n                            \r\n                            return $q.all([p1,p2])\r\n                                .then( \r\n                                function(r) { return {settings:r[0], tipdoc:r[1]}},\r\n                                function() { return null; }\r\n                            );\r\n                        }\r\n                    }                \r\n             }\r\n        }\r\n\r\n        })\r\n        \r\n\r\n      \r\n  }\r\n\r\n    \r\n})();\r\n \n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .controller( \"SettingsController\", SettingsController);\r\n    \r\n      /** @ngInject */\r\n    \r\n    function SettingsController($scope, settings, menuService) {\r\n        \r\n        var vm = this;\r\n        $scope.$parent.vm.title = \"SETĂRI\";\r\n        \r\n        vm.tipdoc = settings.tipdoc;\r\n        vm.settings = settings.settings;\r\n        vm.settingsMenu = menuService.settings();\r\n\r\n        \r\n    }\r\n    \r\n})();\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n    $stateProvider\r\n      .state('index.settings-antet', {\r\n        url: '/settings-antet',\r\n        views: {\r\n             'content@index': {\r\n                templateUrl: 'app/states/settings-antet/main.html',\r\n                controller: 'settingsAntetController',\r\n                controllerAs: 'vm'               \r\n             }\r\n        }\r\n\r\n        })\r\n        \r\n\r\n      \r\n  }\r\n\r\n    \r\n})();\r\n \n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .controller( \"settingsAntetController\", settingsAntetController);\r\n    \r\n      /** @ngInject */\r\n    \r\n    function settingsAntetController($scope) {\r\n        \r\n        var vm = this;\r\n        vm.item = null;\r\n        $scope.$parent.vm.title = \"SETĂRI ANTET\";\r\n        \r\n\r\n\r\n        \r\n    }\r\n    \r\n})();\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n    $stateProvider\r\n      .state('index.settings-other', {\r\n        url: '/settings-other',\r\n        views: {\r\n             'content@index': {\r\n                templateUrl: 'app/states/settings-other/main.html',\r\n                controller: 'settingsOtherController',\r\n                controllerAs: 'vm'               \r\n             }\r\n        }\r\n\r\n        })\r\n        \r\n\r\n      \r\n  }\r\n\r\n    \r\n})();\r\n \n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .controller( \"settingsOtherController\", settingsOtherController);\r\n    \r\n      /** @ngInject */\r\n    \r\n    function settingsOtherController($scope) {\r\n        \r\n        var vm = this;\r\n        vm.item = null;\r\n        $scope.$parent.vm.title = \"ALTE SETĂRI\";\r\n        \r\n\r\n\r\n        \r\n    }\r\n    \r\n})();\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n    $stateProvider\r\n      .state('index.settings-tipdoc', {\r\n        url: '/settings-tipdoc',\r\n        views: {\r\n             'content@index': {\r\n                templateUrl: 'app/states/settings-tipdoc/main.html',\r\n                controller: 'settingsTipdocController',\r\n                controllerAs: 'vm', \r\n                resolve: {\r\n                    tipdoc: function( qs ) {\r\n                        return qs.get('set_tipdoc').then(function(r) { return r.data; });\r\n                    } \r\n                }\r\n             }\r\n        }\r\n\r\n        })\r\n        \r\n\r\n      \r\n  }\r\n\r\n    \r\n})();\r\n \n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .controller( \"settingsTipdocController\", settingsTipdocController);\r\n    \r\n      /** @ngInject */\r\n    \r\n    function settingsTipdocController($scope, tipdoc, qs, gmDialog, $q ) {\r\n        \r\n        var vm = this, q, confirm, promise;\r\n        $scope.$parent.vm.title = \"SETĂRI TIP DOC.\";\r\n        vm.tipdoc = tipdoc.result;\r\n\r\n        var  defaults = [\r\n                {   name: \"CONTRACT\",\r\n                    descriere: \"Contract de arendare\"},\r\n                {   name: \"ACT ADIȚIONAL\",\r\n                    descriere: \"Act adițional la contr.arendare\"},\r\n                {   name: \"NOTIFICARE\",\r\n                    descriere: \"Notificare scrisă\"},   \r\n                {   name: \"REZILIERE\",\r\n                    descriere: \"Act de reziliere\"}               \r\n             ];\r\n        \r\n\r\n/*        if (vm.tipdoc.length == 0 ) {\r\n              vm.tipdoc = angular.copy(defaults); \r\n        }  */      \r\n        \r\n        vm.restoreDefaults = () => {\r\n            confirm = gmDialog.confirm(\"\",\"ATENȚIE!\", \"Veți configura un set implicit de tipuri de documente. Toate tipurile create de Dvs. vor fi șterse! Continuați?\", \"DA\", \"NU\");\r\n            confirm.then( (r) => {\r\n                if ( r == true ) {\r\n                    // step1: remove old data\r\n                    promise = [];\r\n                    angular.forEach(vm.tipdoc, function(e) {\r\n                        q = qs.remove('set_tipdoc', e.id)\r\n                        promise.push(q)\r\n                    })\r\n                    $q.all(promise).then( () => {\r\n                        vm.tipdoc = angular.copy(defaults) \r\n                        promise = [];\r\n                        angular.forEach(vm.tipdoc, function(e,i) {\r\n                            q = qs.create('set_tipdoc', e).then( (r) => vm.tipdoc[i].id = r.data.msg )\r\n                            promise.push(q)\r\n                        })\r\n                        $q.all(promise).then( () => {\r\n                            gmDialog.alert(\"SUCCES\", \"Tipurile de document implicite au fost setate!\", \"OK\");\r\n                        })\r\n                                    \r\n                    })\r\n                    \r\n                }\r\n            })\r\n            \r\n        }\r\n            \r\n        vm.submit = (item) => {\r\n            item.accessType = \"shared\";\r\n            if ( angular.isNumber(item.id) ) {\r\n                qs.update('set_tipdoc', angular.fromJson(item))\r\n                gmDialog.alert(\"SUCCES!\", \"Documentul a fost actualizat!\", \"Închide\");\r\n            } else {\r\n                // new resource\r\n                q = qs.create('set_tipdoc', angular.fromJson(item))\r\n                q.then( r =>  { \r\n                    vm.tipdoc[vm.tipdoc.indexOf(item)].id = r.data.msg; \r\n                    gmDialog.alert(\"SUCCES!\", \"Documentul a fost adăugat!\", \"Închide\");\r\n                })\r\n            }\r\n        }\r\n        \r\n        vm.removeItem = (item) => {\r\n            if (angular.isNumber(item.id)) {\r\n                confirm = gmDialog.confirm(\"\", \"ATENȚIE!\", \"Urmează să ștergeți un document existent! Continuați?\", \"DA\", \"NU\");\r\n                confirm.then( (r) => {\r\n                    if ( r == true ) {\r\n                        q = qs.remove('set_tipdoc', item.id);\r\n                        q.then( () => {\r\n                            console.log(\"del index\", vm.tipdoc.indexOf(item));\r\n                            vm.tipdoc.splice(vm.tipdoc.indexOf(item), 1)\r\n                            gmDialog.alert(\"SUCCES!\", \"Documentul a fost șters!\", \"Închide\");\r\n                        })  \r\n                    }\r\n                }, ()=>{})\r\n            }\r\n        }\r\n        \r\n\r\n    }\r\n    \r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .controller('FilterController', FilterController);\r\n\r\n    /** @ngInject */\r\n    function FilterController(tipdoc, $mdDialog, moment, qs, $q) {\r\n\r\n        var vm = this, result=[]\r\n        \r\n       \r\n       \r\n        vm.dialogSize = 95;\r\n        vm.foundPers = []\r\n        vm.filtru = {}\r\n        vm.filtru.persoane = []\r\n        vm.filtru.aplica = {}\r\n        vm.found = { persoane: null, anexe: null, date: null}\r\n\r\n        vm.filtru.persoane = []\r\n        if ( vm.filtru.persoane.length == 0 ) { vm.found.persoane = null }\r\n        \r\n//        AUTCOMPLETE SHIT\r\n        vm.searchTextChange = pers => { \r\n            qs.lookup('persoane', {\r\n                lookInto: ['name'],\r\n                attributes: ['id', 'name'],\r\n                keyword: pers ? pers.toUpperCase() : null\r\n            }).then( r => {vm.foundPers = r.data;}, err => vm.foundPers = [])\r\n        }\r\n        vm.selectedItemChange = item => {console.log(item); item ? vm.filtru.persoane.push(item): null;  vm.searchText=null; }\r\n//        END AUTOCOMPLETE SHIT\r\n        \r\n        vm.filtru.dateStart = moment().startOf('year').toDate()\r\n        vm.filtru.dateEnd = moment(moment()).add(10, 'years').toDate()\r\n        \r\n        \r\n        vm.filtru.regDateStart = moment().startOf('year').toDate()\r\n        vm.filtru.regDateEnd = moment().toDate()\r\n        \r\n        vm.filtru.status = {active:true, expirate:false, reziliate:false}\r\n        \r\n\r\n        vm.tickAll = () => {\r\n            vm.filter.status.active = true\r\n            vm.filter.status.reziliate = true\r\n            vm.filter.status.expirate = true\r\n        }\r\n        \r\n//        PREFILTER\r\n        \r\n         \r\n        \r\n     \r\n//        apply filters and generate new registru object\r\n        vm.preFilter = filtru => {\r\n            vm.found = { persoane: null, anexe: null, date: null}\r\n\r\n            let ids = []\r\n            let promisePersoane = $q.defer()\r\n            let promiseRegDate = $q.defer()\r\n            let promiseAnexe = $q.defer()\r\n           \r\n            //persoane\r\n            if ( filtru.persoane.length > 0 ) {\r\n                let persoaneIds = []\r\n                filtru.persoane.map( e => { persoaneIds.push({or:{persoana:e.id}}) })\r\n\r\n                promisePersoane = qs.getData({table:'parti', where: persoaneIds, attributes:['parent']})\r\n                \r\n            } else {\r\n                promisePersoane = $q.resolve([])\r\n            }\r\n            \r\n            //inregistrare in intervalul\r\n            if ( filtru.aplica.regDate ) {\r\n                let regDataStart = moment(filtru.regDateStart).unix()\r\n                let regDataEnd = moment(filtru.regDateEnd).unix()\r\n                promiseRegDate = qs.getData({\r\n                    table:'registru', \r\n                    where: [\r\n                        {\"data\": {\r\n                            \"between\": [regDataStart, regDataEnd] \r\n                        }} \r\n                    ],\r\n                    attributes: ['id']\r\n                })\r\n            } else { promiseRegDate = $q.resolve([]) }\r\n            \r\n            //anexe ( tarla, parcela, bl.fizic )\r\n\r\n            if ( filtru.anexe ) {\r\n                let whereData = []\r\n                filtru.anexe.tarla ? whereData.push( { tarla : filtru.anexe.tarla } ) : null\r\n                filtru.anexe.parcela ? whereData.push( { parcela : filtru.anexe.parcela } ) : null\r\n                filtru.anexe.bloc_fizic ? whereData.push( { bloc_fizic : filtru.anexe.bloc_fizic } ) : null\r\n                \r\n                promiseAnexe = qs.getData(\r\n                    {\r\n                        table: 'anexe', \r\n                        where: whereData,\r\n                        attributes: ['parent']\r\n                    }\r\n                                          \r\n                )\r\n                \r\n            } else { promiseAnexe = $q.resolve([])}\r\n            \r\n            \r\n            $q.all( [promisePersoane, promiseRegDate, promiseAnexe] ).then( r => {\r\n\r\n                // prepare first array ( persoane / parti )\r\n                let arr1=[], arr2=[], arr3 = []\r\n                if ( r[0].length > 0 ) {\r\n                   \r\n                    r[0].map( e => arr1.push(e.parent))\r\n                     vm.found.persoane = arr1.length\r\n                }\r\n                //prepare second array ( regDate between)\r\n                if ( r[1].length > 0 ) {\r\n                    \r\n                    r[1].map( e => arr2.push(e.id ))\r\n                    vm.found.date =arr2.length\r\n                }\r\n                //prepare third array (anexe)\r\n                if ( r[2].length > 0 ) {\r\n                   \r\n                    r[2].map( e => arr3.push(e.parent ))\r\n                    vm.found.anexe = arr3.length\r\n                }                \r\n                \r\n                //daca nu a fost aleasa nici o persoana\r\n//                console.log(document.removeChild(elem);\r\n                console.log(\"arrays:\",(arr1, arr2, arr3))\r\n                let arr = [arr1, arr2, arr3]\r\n                result = array_intersect(arr1, arr2, arr3)\r\n                console.log(\"Result:\", result)\r\n            }, err => console.log(err) )\r\n        }\r\n        \r\n        \r\n       \r\n\r\n        vm.close = () => {\r\n            $mdDialog.hide({action:'reset', reg: result})\r\n        }\r\n    }\r\n    \r\n    function array_intersect() {\r\n      var i, all, shortest, nShortest, n, len, ret = [], obj={}, nOthers;\r\n        console.log(arguments)\r\n      nOthers = arguments.length-1;\r\n      nShortest = arguments[0].length;\r\n      shortest = 0;\r\n      for (i=0; i<=nOthers; i++){\r\n        n = arguments[i].length;\r\n        if (n<nShortest) {\r\n          shortest = i;\r\n          nShortest = n;\r\n        }\r\n      }\r\n\r\n      for (i=0; i<=nOthers; i++) {\r\n        n = (i===shortest)?0:(i||shortest); //Read the shortest array first. Read the first array instead of the shortest\r\n        len = arguments[n].length;\r\n        for (var j=0; j<len; j++) {\r\n            var elem = arguments[n][j];\r\n            if(obj[elem] === i-1) {\r\n              if(i === nOthers) {\r\n                ret.push(elem);\r\n                obj[elem]=0;\r\n              } else {\r\n                obj[elem]=i;\r\n              }\r\n            }else if (i===0) {\r\n              obj[elem]=0;\r\n            }\r\n        }\r\n      }\r\n      return ret;\r\n    }\r\n    \r\n    \r\n})();\nangular.module(\"app\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/index.html\",\"<div ng-cloak><div ui-view=index.main layout-fill layout=column></div></div>\");\n$templateCache.put(\"app/states/_main/listBottomSheet.template.html\",\"<md-bottom-sheet class=md-list><md-list><md-list-item ng-repeat=\\\"item in libo.items\\\" role=link md-ink-ripple><md-button ng-click=libo.itemClick($index) layout-fill aria-label=label><md-icon md-svg-icon={{item.icon}} aria-label={{item.name}} style=float:left></md-icon><md-button-text>{{item.name}}</md-button-text></md-button><md-divider></md-divider><!--            </div>--></md-list-item></md-list></md-bottom-sheet>\");\n$templateCache.put(\"app/states/_main/main.html\",\"<div ui-view=navleft></div><div ui-view=toolbars flex=none layout=column></div><div layout=column flex ui-view=content></div><div layout=row style=\\\"background: navy; color:yellow; padding:5px; font-size: 12px; font-weight: 100\\\"><small>&copy; 2017, MAFTEI GABRIEL-CLAUDIU PFA ARAD</small> <span flex></span> <small>{{vm.app.version}}</small></div>\");\n$templateCache.put(\"app/states/addressBook/main-pf.html\",\"<md-bottom-sheet flex style=padding:0><form name=modForm flex layout-fill layout-padding><md-toolbar class=\\\"md-accent md-hue-1\\\"><div class=md-toolbar-tools><span flex></span><h5><span ng-show=\\\"vm.item.id > 0\\\">MODIFICARE</span> <span ng-show=!vm.item.id>ADAUGARE</span> TITULAR PERSOANĂ FIZICĂ</h5><span flex></span><md-button class=md-icon-button ng-click=vm.remove(vm.item) aria-label=\\\"back to main\\\" ng-disabled=modForm.$invalid ng-h><md-icon md-svg-icon=action:ic_delete_forever_24px></md-icon><md-tooltip>șterge</md-tooltip></md-button><md-button class=md-icon-button ng-click=vm.submit(vm.item) aria-label=\\\"back to main\\\" ng-disabled=modForm.$invalid><md-icon md-svg-icon=navigation:ic_check_24px></md-icon><md-tooltip>confirmă</md-tooltip></md-button><md-button class=md-icon-button ng-click=vm.close() aria-label=\\\"back to main\\\"><md-icon md-svg-icon=navigation:ic_close_24px></md-icon><md-tooltip>inchide</md-tooltip></md-button></div></md-toolbar><md-content flex><md-card md-whiteframe=3 layout-padding flex=end><md-card-content><b>1. DATE GENERALE</b><md-divider></md-divider><br><section layout=row><input placeholder=\\\"Numele şi prenumele\\\" flex=50 ng-model=vm.item.name required> <input placeholder=\\\" cod numeric personal\\\" flex=15 ng-model=vm.item.cnp> <input flex=5 x ng-model=vm.item.content.ciTip> <input flex=5 style=width:50px placeholder=\\\" seria\\\" ng-model=vm.item.content.ciSeria> <input flex=10 placeholder=\\\" numărul\\\" ng-model=vm.item.content.ciNr> <input flex=end placeholder=\\\" autoritatea emitenta\\\" ng-model=vm.item.content.ciElib></section><section layout=row><input flex=10 placeholder=\\\" data nasterii\\\" ng-model=vm.item.content.dataNastere> <input flex=20 placeholder=\\\" localitatea\\\" ng-model=vm.item.content.locNastere> <input flex=20 placeholder=\\\" judetul\\\" ng-model=vm.item.content.judetNastere> <input flex=20 placeholder=\\\" ţara\\\" ng-model=vm.item.content.taraNastere> <input flex=15 placeholder=\\\" cetăţenia\\\" ng-model=vm.item.content.cetatenie> <input flex=15 placeholder=\\\" starea civilă\\\" ng-model=vm.item.content.stcivila></section></md-card-content></md-card><md-card md-whiteframe=3 layout-padding><md-card-content><b>2. DOMICILIUL</b><md-divider></md-divider><br><section layout=row><input flex=30 placeholder=\\\" localitatea\\\" ng-model=vm.item.content.dom.loc> <input flex=30 placeholder=\\\" strada\\\" ng-model=vm.item.content.dom.str> <input flex=10 placeholder=\\\" nr\\\" ng-model=vm.item.content.dom.nr> <input flex=10 placeholder=\\\" bl\\\" ng-model=vm.item.content.dom.bl> <input flex=5 placeholder=\\\" sc\\\" ng-model=vm.item.content.dom.sc> <input flex=5 placeholder=\\\" et\\\" ng-model=vm.item.content.dom.et> <input flex=10 placeholder=\\\" ap\\\" ng-model=vm.item.content.dom.ap></section><section layout=row><input flex=40 placeholder=\\\" judeţul\\\" ng-model=vm.item.content.dom.jud> <input flex=20 placeholder=\\\" codul poştal\\\" ng-model=vm.item.content.dom.zip> <input flex=40 placeholder=\\\" ţara\\\" ng-model=vm.item.content.dom.tara></section><section layout=row><input flex=40 placeholder=\\\" telefon\\\" ng-model=vm.item.content.dom.tel> <input flex=20 placeholder=\\\" fax\\\" ng-model=vm.item.content.dom.fax> <input flex=40 placeholder=\\\" e-mail\\\" ng-model=vm.item.content.dom.email></section></md-card-content></md-card><md-card md-whiteframe=3 layout-padding><md-card-content><b>3. REŞEDINŢA ÎN ROMÂNIA (dacă este cazul)</b><md-divider></md-divider><br><section layout=row><input flex=30 placeholder=\\\" localitatea\\\" ng-model=vm.item.content.rsd.loc> <input flex=30 placeholder=\\\" strada\\\" ng-model=vm.item.content.rsd.str> <input flex=10 placeholder=\\\" nr\\\" ng-model=vm.item.content.rsd.nr> <input flex=10 placeholder=\\\" bl\\\" ng-model=vm.item.content.rsd.bl> <input flex=5 placeholder=\\\" sc\\\" ng-model=vm.item.content.rsd.sc> <input flex=5 placeholder=\\\" et\\\" ng-model=vm.item.content.rsd.et> <input flex=10 placeholder=\\\" ap\\\" ng-model=vm.item.content.rsd.ap></section><section layout=row><input flex=40 placeholder=\\\" judeţul\\\" ng-model=vm.item.content.rsd.jud> <input flex=20 placeholder=\\\" codul poştal\\\" ng-model=vm.item.content.rsd.zip> <input flex=40 placeholder=\\\" ţara\\\" ng-model=vm.item.content.rsd.tara></section><br></md-card-content></md-card></md-content></form></md-bottom-sheet>\");\n$templateCache.put(\"app/states/addressBook/main-pj.html\",\"<md-bottom-sheet flex style=padding:0><form name=modForm layout=column flex layout-fill><md-toolbar class=\\\"md-accent md-hue-1\\\"><div class=md-toolbar-tools><md-button class=md-icon-button ui-sref=\\\"index.addressBook({action:\\'\\', id:\\'\\'})\\\" aria-label=\\\"back to main\\\"><md-icon md-svg-icon=navigation:ic_chevron_left_24px></md-icon><md-tooltip>meniul principal</md-tooltip></md-button><h5>MODIFICARE TITULAR PERSOANĂ FIZICĂ</h5><span flex></span><md-button class=md-icon-button ng-click=vm.remove(vm.item) aria-label=\\\"back to main\\\" ng-disabled=modForm.$invalid><md-icon md-svg-icon=action:ic_delete_forever_24px></md-icon><md-tooltip>șterge</md-tooltip></md-button><md-button class=md-icon-button ng-click=vm.submit(vm.item) aria-label=\\\"back to main\\\" ng-disabled=modForm.$invalid><md-icon md-svg-icon=navigation:ic_check_24px></md-icon><md-tooltip>confirmpă</md-tooltip></md-button><md-button class=md-icon-button ng-click=vm.close() aria-label=\\\"back to main\\\"><md-icon md-svg-icon=navigation:ic_close_24px></md-icon><md-tooltip>inchide</md-tooltip></md-button></div></md-toolbar><section layout=column><md-card md-whiteframe=3 layout-padding><md-card-content><b>1. DATE GENERALE</b><md-divider></md-divider><br><section layout=row><input placeholder=\\\" Denumirea\\\" flex=50 ng-model=vm.item.name required> <input placeholder=\\\" Nr.înreg. Reg.Comerţului\\\" flex=25 ng-model=vm.item.regCom> <input placeholder=\\\" C.U.I / C.F.\\\" flex=25 ng-model=vm.item.cui required></section></md-card-content></md-card><md-card md-whiteframe=3 layout-padding><md-card-content><b>2. LOCALIZARE</b><md-divider></md-divider><br><section layout=row><input flex=30 placeholder=\\\" localitatea\\\" ng-model=vm.item.content.sed.loc> <input flex=30 placeholder=\\\" strada\\\" ng-model=vm.item.content.sed.str> <input flex=10 placeholder=\\\" nr\\\" ng-model=vm.item.content.sed.nr> <input flex=10 placeholder=\\\" bl\\\" ng-model=vm.item.content.sed.bl> <input flex=5 placeholder=\\\" sc\\\" ng-model=vm.item.content.sed.sc> <input flex=5 placeholder=\\\" et\\\" ng-model=vm.item.content.sed.et> <input flex=10 placeholder=\\\" ap\\\" ng-model=vm.item.content.sed.ap></section><section layout=row><input flex=40 placeholder=\\\" judeţul\\\" ng-model=vm.item.content.sed.jud> <input flex=20 placeholder=\\\" codul poştal\\\" ng-model=vm.item.content.sed.zip> <input flex=40 placeholder=\\\" ţara\\\" ng-model=vm.item.content.sed.tara></section></md-card-content></md-card><md-card md-whiteframe=3 layout-padding><md-card-content><b>3. DATE DE CONTACT</b><md-divider></md-divider><br><section layout=row><input flex=20 placeholder=\\\" telefon\\\" ng-model=vm.item.content.sed.tel> <input flex=20 placeholder=\\\" fax\\\" ng-model=vm.item.content.sed.fax> <input flex=30 placeholder=\\\" e-mail\\\" ng-model=vm.item.content.sed.email> <input flex=30 placeholder=\\\" site\\\" ng-model=vm.item.content.sed.www></section><br></md-card-content></md-card></section></form></md-bottom-sheet>\");\n$templateCache.put(\"app/states/addressBook/main.html\",\"<md-toolbar class=\\\"md-accent md-hue-1\\\"><div class=md-toolbar-tools><md-button class=md-icon-button ui-sref=index.main aria-label=\\\"back to main\\\"><md-icon md-svg-icon=navigation:ic_chevron_left_24px></md-icon><md-tooltip>INAPOI</md-tooltip></md-button><h5>TOATE PERSOANELE</h5><span flex></span><md-button class=md-icon-button ng-click=\\\"show.search = !show.search; search = {}\\\" aria-label=\\\"adauga persoana\\\"><md-icon md-svg-icon=action:ic_search_24px></md-icon><md-tooltip>FILTRARE</md-tooltip></md-button><!--\t\tadd pf or pj--><md-menu><md-button aria-label=\\\"Optiuni adauga nou\\\" class=md-icon-button ng-click=$mdMenu.open()><md-icon md-svg-src=content:ic_add_24px></md-icon></md-button><md-menu-content width=3><md-menu-item><md-button ng-click=\\\"vm.create(\\'pf\\')\\\" class=\\\"md-accent md-hue-2\\\"><md-icon md-svg-src=content:ic_add_circle_outline_24px></md-icon>PERSOANĂ FIZICĂ</md-button></md-menu-item><md-menu-item><md-button ng-click=\\\"vm.create(\\'pj\\')\\\" class=\\\"md-accent md-hue-2\\\"><md-icon md-svg-src=content:ic_add_circle_outline_24px></md-icon>PERSOANĂ JURIDICĂ</md-button></md-menu-item></md-menu-content></md-menu><!--            back to registru--></div></md-toolbar><md-content flex=100 style=\\\"border:1px solid green\\\"><div layout=row flex ng-show=show.search class=md-padding><md-input-container flex=100><input ng-model=search.criteria class=md-padding style=font-size:25px placeholder=\\\"filtrează după orice criteriu...\\\" flex></md-input-container></div><md-list layout=column flex><md-list-item class=md-3-line ng-repeat=\\\"p in vm.contacts  | filter: p.name = search.criteria  | filter: p.cui = search.criteria  | filter: p.cnp = search.criteria\\\" ng-click=vm.update(p) ng-right-click=vm.remove(p)><!--        <md-list-item class=\\\"md-2-line\\\"  ng-repeat=\\\"p in vm.contacts\\\" ng-click=\\\"vm.update(p)\\\">--><div class=md-list-item-text><h3>{{$index+1}} {{p.name}}</h3><h4>{{p.cnp}} {{p.cui}}</h4><md-divider></md-divider></div></md-list-item></md-list></md-content>\");\n$templateCache.put(\"app/states/alerts/main.html\",\"alerts\");\n$templateCache.put(\"app/states/contacts/add.html\",\"<md-bottom-sheet layout=column><form name=addpersoana flex=100 layout-fill><div class=\\\"md-accent md-hue-2\\\" layout=row><h6 ng-init=\\\"vm.tip = 1\\\">Adăugare persoană &nbsp;</h6><md-switch ng-model=vm.tip ng-true-value=1 ng-false-value=0 aria-label=\\\"switch tip persoana\\\"><span ng-if=vm.tip>FIZICĂ</span> <span ng-if=!vm.tip>JURIDICĂ</span></md-switch><span flex></span><md-button class=md-icon-button aria-label=confirma aria-label=confirma ng-click=vm.submit(vm.item) ng-disabled=addpersoana.$invalid><md-icon md-svg-icon=navigation:ic_check_24px></md-icon></md-button><md-button class=md-icon-button aria-label=close ng-click=vm.close()><md-icon md-svg-icon=navigation:ic_close_24px></md-icon></md-button></div><md-content><div ng-if=\\\"vm.tip == 1\\\" ng-include=\\\"\\'app/states/contacts/add.pf.html\\'\\\"></div></md-content><md-content ng-if=\\\"vm.tip != 1\\\" ng-include=\\\"\\'app/states/contacts/add.pj.html\\'\\\"></md-content></form></md-bottom-sheet>\");\n$templateCache.put(\"app/states/contacts/add.pf.html\",\"<md-content flex><md-card flex><md-card-content><b>1. DATE GENERALE</b><md-divider></md-divider><br><section layout=row><input placeholder=\\\"Numele şi prenumele\\\" flex=50 ng-model=vm.item.name required> <input placeholder=\\\" cod numeric personal\\\" flex=15 ng-model=vm.item.cnp> <input flex=5 x ng-model=vm.item.content.ciTip> <input flex=5 style=width:50px placeholder=\\\" seria\\\" ng-model=vm.item.content.ciSeria> <input flex=10 placeholder=\\\" numărul\\\" ng-model=vm.item.content.ciNr> <input flex=end placeholder=\\\" autoritatea emitenta\\\" ng-model=vm.item.content.ciElib></section><section layout=row><input flex=10 placeholder=\\\" data nasterii\\\" ng-model=vm.item.content.dataNastere> <input flex=20 placeholder=\\\" localitatea\\\" ng-model=vm.item.content.locNastere> <input flex=20 placeholder=\\\" judetul\\\" ng-model=vm.item.content.judetNastere> <input flex=20 placeholder=\\\" ţara\\\" ng-model=vm.item.content.taraNastere> <input flex=15 placeholder=\\\" cetăţenia\\\" ng-model=vm.item.content.cetatenie> <input flex=15 placeholder=\\\" starea civilă\\\" ng-model=vm.item.content.stcivila></section></md-card-content></md-card><md-card><md-card-content><b>2. DOMICILIUL</b><md-divider></md-divider><br><section layout=row><input flex=30 placeholder=\\\" localitatea\\\" ng-model=vm.item.content.dom.loc> <input flex=30 placeholder=\\\" strada\\\" ng-model=vm.item.content.dom.str> <input flex=10 placeholder=\\\" nr\\\" ng-model=vm.item.content.dom.nr> <input flex=10 placeholder=\\\" bl\\\" ng-model=vm.item.content.dom.bl> <input flex=5 placeholder=\\\" sc\\\" ng-model=vm.item.content.dom.sc> <input flex=5 placeholder=\\\" et\\\" ng-model=vm.item.content.dom.et> <input flex=10 placeholder=\\\" ap\\\" ng-model=vm.item.content.dom.ap></section><section layout=row><input flex=40 placeholder=\\\" judeţul\\\" ng-model=vm.item.content.dom.jud> <input flex=20 placeholder=\\\" codul poştal\\\" ng-model=vm.item.content.dom.zip> <input flex=40 placeholder=\\\" ţara\\\" ng-model=vm.item.content.dom.tara></section><section layout=row><input flex=40 placeholder=\\\" telefon\\\" ng-model=vm.item.content.dom.tel> <input flex=20 placeholder=\\\" fax\\\" ng-model=vm.item.content.dom.fax> <input flex=40 placeholder=\\\" e-mail\\\" ng-model=vm.item.content.dom.email></section></md-card-content></md-card><md-card><md-card-content><b>3. REŞEDINŢA ÎN ROMÂNIA (dacă este cazul)</b><md-divider></md-divider><br><section layout=row><input flex=30 placeholder=\\\" localitatea\\\" ng-model=vm.item.content.rsd.loc> <input flex=30 placeholder=\\\" strada\\\" ng-model=vm.item.content.rsd.str> <input flex=10 placeholder=\\\" nr\\\" ng-model=vm.item.content.rsd.nr> <input flex=10 placeholder=\\\" bl\\\" ng-model=vm.item.content.rsd.bl> <input flex=5 placeholder=\\\" sc\\\" ng-model=vm.item.content.rsd.sc> <input flex=5 placeholder=\\\" et\\\" ng-model=vm.item.content.rsd.et> <input flex=10 placeholder=\\\" ap\\\" ng-model=vm.item.content.rsd.ap></section><section layout=row><input flex=40 placeholder=\\\" judeţul\\\" ng-model=vm.item.content.rsd.jud> <input flex=20 placeholder=\\\" codul poştal\\\" ng-model=vm.item.content.rsd.zip> <input flex=40 placeholder=\\\" ţara\\\" ng-model=vm.item.content.rsd.tara></section><br></md-card-content></md-card></md-content>\");\n$templateCache.put(\"app/states/contacts/add.pj.html\",\"<section layout=column><md-card md-whiteframe=3 layout-padding><md-card-content><b>1. DATE GENERALE</b><md-divider></md-divider><br><section layout=row><input placeholder=\\\" Denumirea\\\" flex=50 ng-model=vm.item.name required> <input placeholder=\\\" Nr.înreg. Reg.Comerţului\\\" flex=25 ng-model=vm.item.regCom> <input placeholder=\\\" C.U.I / C.F.\\\" flex=25 ng-model=vm.item.cui></section></md-card-content></md-card><md-card md-whiteframe=3 layout-padding><md-card-content><b>2. LOCALIZARE</b><md-divider></md-divider><br><section layout=row><input flex=30 placeholder=\\\" localitatea\\\" ng-model=vm.item.content.sed.loc> <input flex=30 placeholder=\\\" strada\\\" ng-model=vm.item.content.sed.str> <input flex=10 placeholder=\\\" nr\\\" ng-model=vm.item.content.sed.nr> <input flex=10 placeholder=\\\" bl\\\" ng-model=vm.item.content.sed.bl> <input flex=5 placeholder=\\\" sc\\\" ng-model=vm.item.content.sed.sc> <input flex=5 placeholder=\\\" et\\\" ng-model=vm.item.content.sed.et> <input flex=10 placeholder=\\\" ap\\\" ng-model=vm.item.content.sed.ap></section><section layout=row><input flex=40 placeholder=\\\" judeţul\\\" ng-model=vm.item.content.sed.jud> <input flex=20 placeholder=\\\" codul poştal\\\" ng-model=vm.item.content.sed.zip> <input flex=40 placeholder=\\\" ţara\\\" ng-model=vm.item.content.sed.tara></section></md-card-content></md-card><md-card md-whiteframe=3 layout-padding><md-card-content><b>3. DATE DE CONTACT</b><md-divider></md-divider><br><section layout=row><input flex=20 placeholder=\\\" telefon\\\" ng-model=vm.item.content.sed.tel> <input flex=20 placeholder=\\\" fax\\\" ng-model=vm.item.content.sed.fax> <input flex=30 placeholder=\\\" e-mail\\\" ng-model=vm.item.content.sed.email> <input flex=30 placeholder=\\\" site\\\" ng-model=vm.item.content.sed.www></section><br></md-card-content></md-card></section>\");\n$templateCache.put(\"app/states/document/editParteModal.html\",\"<md-dialog flex=60><!--    <pre>{{vm.item.persoane.name}}</pre>--><md-dialog-header><md-toolbar class=\\\"md-accent md-hue-2\\\"><div class=md-toolbar-tools>CONTRACT - <span ng-show=vm.searchText>&nbsp; EDITARE </span><span ng-hide=vm.searchText>&nbsp; ADĂUGARE </span>&nbsp; PARȚI CONTRACTUALE <span flex></span><md-button class=md-icon-button ng-click=vm.close()><md-icon md-svg-icon=navigation:ic_close_24px></md-icon></md-button></div></md-toolbar></md-dialog-header><md-dialog-content class=md-padding><!-- persoana      --> <span layout=row layout-align=\\\"center center\\\" flex><span flex=20>Persoana &nbsp;&nbsp;</span><md-autocomplete flex md-autoselect=true placeholder=\\\"alegeti persoana....\\\" md-item-text=item.name md-items=\\\"item in vm.foundPers\\\" md-menu-class=autocomplete-custom-template md-min-length=1 md-delay=100 md-search-text=vm.searchText md-search-text-change=vm.searchTextChange(vm.searchText) md-select-on-match=true md-match-case-insensitive=true md-selected-item-change=vm.selectedItemChange(item) md-selected-item=vm.selectedItem><md-item-template><span class=item-title><span md-highlight-flags=^i md-highlight-text=vm.searchText>{{item.name}}</span></span></md-item-template><md-not-found>NU exista persoana, <span style=\\\"text-decoration: underline; font-weight: 800; color:navy\\\" ng-click=vm.addPerson()>ADAUGA</span></md-not-found></md-autocomplete></span><br><!--mandatar--> <span layout=row layout-align=\\\"center center\\\" flex ng-show=vm.item.mandatar><span flex=20>reprezentată de &nbsp;&nbsp;</span><md-autocomplete flex md-autocomplete-clear=vm.event() md-autoselect=true placeholder=\\\"alegeti reprezentantul....\\\" md-item-text=item.name md-items=\\\"item in vm.foundPersM\\\" md-menu-class=autocomplete-custom-template md-min-length=1 md-delay=100 md-search-text=vm.searchTextM md-search-text-change=vm.searchTextChangeM(vm.searchTextM) md-select-on-match=true md-match-case-insensitive=true md-selected-item-change=vm.selectedItemChangeM(item) md-selected-item=vm.selectedItemM><md-item-template><span class=item-title><span md-highlight-flags=^i md-highlight-text=vm.searchTextM>{{item.name}}</span></span></md-item-template><md-not-found>NU exista persoana, <span style=\\\"text-decoration: underline; font-weight: 800; color:navy\\\" ng-click=vm.addMandatar()>ADAUGA</span></md-not-found></md-autocomplete></span><!--in calitate de--> <span layout=row layout-align=\\\"center center\\\" flex ng-show=vm.item.mandatar><span flex=20></span> <span flex=20>in calitate de &nbsp;&nbsp;</span><md-input-container flex><input ng-model=vm.item.mandatar.calitate></md-input-container>&nbsp; </span><!--add blank mandatar if not exists        --> <span layout=row layout-align=\\\"center center\\\" flex ng-hide=vm.item.mandatar><md-button class=\\\"md-button md-raised\\\" ng-click=vm.addMandatarBlank(vm.item)><md-icon md-svg-icon=content:ic_add_24px></md-icon>ADAUGA REPREZENTANT</md-button></span><!--        <pre>{{vm.item|json}}</pre>--></md-dialog-content><md-dialog-actions><span flex></span><md-button class=\\\"md-warn md-hue-2 md-raised\\\" ng-disabled=\\\"!vm.item.titular.name || (vm.item.mandatar && vm.item.mandatar.name == null)\\\" ng-click=vm.submit(vm.item)><md-icon md-svg-icon=navigation:ic_check_24px></md-icon>CONFIRMĂ</md-button></md-dialog-actions></md-dialog>\");\n$templateCache.put(\"app/states/document/main.conex.html\",\"<md-toolbar class=\\\"md-primary md-hue-1\\\"><div class=md-toolbar-tools layout-align=\\\"end center\\\"><i hide-xs><small>document aferent contractului {{vm.registru.parentData.nr}} / {{vm.registru.parentData.data*1000|date:\\\"dd.MM.yyyy\\\"}}</small></i></div></md-toolbar><md-content><section layout-gt-sm=row layout-xs=column flex=100><md-card flex-gt-sm=75 layout=column><md-toolbar layout=row class=\\\"md-accent md-hue-1\\\"><div layout-align=\\\"center center\\\" class=md-toolbar-tools><h4>CONȚINUT DOCUMENT</h4></div></md-toolbar><!--            <div text-angular=\\\"text1\\\" ng-model=\\\"vm.registru.detalii.data.content\\\" ng-change = \\\"vm.submitDetalii(vm.registru.detalii)\\\"></div>             --><textarea ui-tinymce ng-model=vm.registru.detalii.data.content ng-change=vm.submitDetalii(vm.registru.detalii) style=\\\"height: 30vh\\\"></textarea></md-card><md-card flex-gt-sm=25 layout=column><md-toolbar layout=row class=\\\"md-accent md-hue-1\\\"><div layout-align=\\\"center center\\\" class=md-toolbar-tools><h4>ISTORIC CONTRACT</h4></div></md-toolbar><md-list><md-list-item ui-sref=\\\"index.document({id: vm.registru.parentData.id})\\\"><span flex=20><small>{{vm.registru.parentData.data*1000|date:\\'dd.MM.yyyy\\'}}</small></span> &nbsp;&nbsp; <span flex=10><small>{{vm.registru.parentData.nr}}</small></span> &nbsp;&nbsp; <span flex><small>incheiat contract de arendare</small></span></md-list-item><md-list-item ui-sref=index.document({id:vm.registru.id})><span flex=20><small>{{vm.registru.data|date:\\'dd.MM.yyyy\\'}}</small></span> &nbsp;&nbsp; <span flex=10><small>{{vm.registru.nr}}</small></span> &nbsp;&nbsp; <span flex=end><small>incheiat {{vm.registru.set_tipdoc.name}}</small></span></md-list-item></md-list></md-card></section></md-content><!--<pre>{{vm.history | json}}</pre>-->\");\n$templateCache.put(\"app/states/document/main.contract.anexe.html\",\"<form name=detalii form-on-change=vm.submitAnexe(vm.registru.anexes) layout=column layout-fill><section flex=10 layout-align=\\\"center start\\\" layout=row><span flex></span><md-button class=md-raised ng-click=\\\"vm.registru.anexes.push({parent: vm.registru.id})\\\"><md-icon md-svg-icon=content:ic_add_24px></md-icon>ADAUGĂ O ANEXĂ NOUĂ</md-button></section><md-list flex=10 layout=column><md-list-item layout-align=\\\"start center\\\" class=bg-header><span flex-gt-sm=5 flex-xs=30>NR.</span> <span flex-gt-sm=10 hide-xs>TARLAUA</span> <span flex-gt-sm=10 hide-xs>PARCELA</span> <span flex-gt-sm=10 flex-xs=45>SUPRAFATA</span> <span flex-gt-sm=10 hide-xs>BLOC FIZIC</span> <span flex-gt-sm=20 hide-xs>ACT PROPR.</span> <span flex-gt-sm=10 hide-xs>CAT.FOLOS.</span> <span flex-gt-sm=20 hide-xs>VECINI (N,E,S,V)</span> <span flex-gt-sm=10 flex-xs=25>ACTIUNI</span></md-list-item></md-list><md-list flex=55><md-content flex=100 style=height:55vh><md-list-item ng-repeat=\\\"item in vm.registru.anexes\\\" layout-align=\\\"start start\\\" ng-class=\\\"{\\'bordered\\': !item.id}\\\"><!--       gt-sm list item--><!--            <section layout=\\\"row\\\" flex-gt-sm=\\\"100\\\" layout-align = \\\"start start\\\">--> <span flex-gt-sm=5 flex-xs=30><md-input-container flex><label>NR.CRT</label><input ng-value=$index+1 ng-disabled></md-input-container></span>&nbsp; <span flex-gt-sm=10 hide-xs><md-input-container flex><label>TARLA</label><input ng-model=item.tarla></md-input-container></span>&nbsp; <span flex-gt-sm=10 hide-xs><md-input-container flex><label>PARCELĂ</label><input ng-model=item.parcela></md-input-container></span>&nbsp; <span flex-gt-sm=10 flex-xs=40><md-input-container flex><label>SUPRAFAȚĂ</label><input ng-model=item.ha dz ng-change=vm.calculateSumAnexe()></md-input-container></span>&nbsp; <span flex-gt-sm=10 hide-xs><md-input-container flex><label>bloc fizic</label><input ng-model=item.bloc_fizic></md-input-container></span>&nbsp; <span flex-gt-sm=20 hide-xs><md-input-container flex><label>act prop.</label><input ng-model=item.act_prop></md-input-container></span>&nbsp; <span flex-gt-sm=10 hide-xs><md-input-container flex><label>categ.</label><input ng-model=item.categ_folosinta></md-input-container></span>&nbsp; <span flex-gt-sm=20 hide-xs><md-input-container flex><label>vecini</label><input ng-model=item.vecini></md-input-container></span><span flex-gt-sm=10 flex-xs=30 layout=row><!--                        show mood if saved or not--><md-icon class=green md-svg-icon=social:ic_mood_24px ng-show=item.id></md-icon><md-icon class=red md-svg-icon=social:ic_mood_bad_24px ng-show=!item.id></md-icon><md-button class=md-icon-button style=padding:2px!important md-no-ink=\\\"\\\" ng-click=vm.removeAnexa(item)><md-icon class=red md-svg-icon=navigation:ic_close_24px></md-icon></md-button></span><!--            </section>--><!--        end of gt-sm list item--></md-list-item></md-content></md-list><md-list flex=10 layout=row><md-list-item flex=100 layout-align=\\\"end center\\\" class=bg-footer><span flex-gt-sm=5 flex-xs=30></span> <span flex-gt-sm=10 hide-xs></span> <span flex-gt-sm=10 hide-xs></span> <span flex-gt-sm=10 flex-xs=45>{{vm.sumAnexe}}</span> <span flex-gt-sm=60 hide-xs><small>în contract aveți {{vm.detalii.data.ha}} (diferență = {{vm.difHa}}) </small></span><span flex-gt-sm=10 flex-xs=25></span></md-list-item></md-list></form>\");\n$templateCache.put(\"app/states/document/main.contract.ards.html\",\"<md-toolbar class=\\\"md-accent md-hue-0\\\" style=\\\"opacity: 0.5; margin:0; padding:0;min-height:40px\\\"><div class=md-toolbar-tools style=height:40px><h5>ARENDAȘI</h5><span flex></span><!--                ADD PARTE--><md-button class=md-icon-button style=\\\"margin-top: 0\\\" ng-click=\\\"vm.edit(\\'arendas\\')\\\"><md-icon md-svg-icon=content:ic_add_24px></md-icon></md-button><!--                END ADD PARTE--></div></md-toolbar><div class=md-padding layout=column><span ng-repeat=\\\"item in vm.registru.partis | filter:{calitate:\\'arendas\\'}\\\" layout=column><span layout=row flex layout-align=\\\"center center\\\">{{$index+1}} &nbsp;&nbsp; <strong>{{item.persoane.name}}</strong> &nbsp; &nbsp; <span ng-show=\\\"item.mandataris.length > 0 \\\">prin &nbsp; <strong>{{item.mandataris[0].persoane.name}}</strong> &nbsp;({{item.mandataris[0].calitate }}) </span><span flex></span><md-button class=\\\"md-icon-button md-warn\\\" ng-click=vm.removeParte(item)><md-icon md-svg-icon=navigation:ic_close_24px></md-icon></md-button><md-button class=\\\"md-icon-button md-accent\\\" ng-click=vm.edit(item)><md-icon md-svg-icon=editor:ic_mode_edit_24px></md-icon></md-button></span></span></div>\");\n$templateCache.put(\"app/states/document/main.contract.ardt.html\",\"<md-toolbar class=\\\"md-accent md-hue-0\\\" style=\\\"opacity: 0.5; margin:0; padding:0;min-height:40px\\\"><div class=md-toolbar-tools style=height:40px><h5>ARENDATORI</h5><span flex></span><!--                ADD PARTE--><md-button class=md-icon-button style=\\\"margin-top: 0\\\" ng-click=\\\"vm.edit(\\'arendator\\')\\\"><md-icon md-svg-icon=content:ic_add_24px></md-icon></md-button><!--                END ADD PARTE--></div></md-toolbar><div class=md-padding layout=column><span ng-repeat=\\\"item in vm.registru.partis | filter:{calitate:\\'arendator\\'}\\\" layout=column><span layout=row flex layout-align=\\\"center center\\\">{{$index+1}} &nbsp;&nbsp; <strong>{{item.persoane.name}}</strong> &nbsp; &nbsp; <span ng-show=\\\"item.mandataris.length > 0 \\\">prin &nbsp; <strong>{{item.mandataris[0].persoane.name}}</strong> &nbsp;({{item.mandataris[0].calitate }}) </span><span flex></span><md-button class=\\\"md-icon-button md-warn\\\" ng-click=vm.removeParte(item)><md-icon md-svg-icon=navigation:ic_close_24px></md-icon></md-button><md-button class=\\\"md-icon-button md-accent\\\" ng-click=vm.edit(item)><md-icon md-svg-icon=editor:ic_mode_edit_24px></md-icon></md-button></span></span></div>\");\n$templateCache.put(\"app/states/document/main.contract.continut.html\",\"<textarea ui-tinymce ng-model=vm.registru.detalii.data.continut ng-change=vm.submitDetalii(vm.registru.detalii) style=\\\"height: 50vh\\\">\\r\\n</textarea>\");\n$templateCache.put(\"app/states/document/main.contract.detalii.html\",\"<!--                    <md-toolbar class=\\\"md-accent md-hue-0\\\" style=\\\"opacity: 0.5; margin:0; padding:0;min-height:40px\\\">\\r\\n                        <div class=\\\"md-toolbar-tools\\\" style=\\\"height:40px\\\">\\r\\n                            <h5>CLAUZE</h5>\\r\\n                        </div>\\r\\n                    </md-toolbar>--><form name=detalii form-on-change=vm.submitDetalii(vm.registru.detalii) layout-fill><div layout=column flex><!--                       de la pana la --><md-card flex class=\\\"md-padding md-whiteframe-z1\\\"><div layout-align=\\\"center center\\\" layout=row><span flex></span><md-input-container><label>De la</label><md-datepicker ng-model=vm.registru.detalii.data.dataStart md-hide-icons=calendar ng-change=\\\"vm.calculDurata(\\'start\\'); vm.submitDetalii(vm.registru.detalii)\\\"></md-datepicker></md-input-container><!-- sageata --><md-icon md-svg-icon=action:ic_trending_flat_24px></md-icon>&nbsp;<md-input-container><label>până la</label><md-datepicker ng-model=vm.registru.detalii.data.dataEnd md-hide-icons=calendar ng-change=\\\"vm.calculDurata(\\'end\\'); vm.submitDetalii(vm.registru.detalii)\\\"></md-datepicker></md-input-container><span flex=5></span><md-input-container flex=20 hide-xs><label>Durata (ani)</label><input ng-model=vm.durata ng-change=\\\"vm.calculDurata(\\'interval\\')\\\"></md-input-container><span flex></span></div></md-card><md-card layout-gt-sm=row layout-xs=column flex class=\\\"md-padding md-whiteframe-z1\\\"><md-input-container flex-gt-sm=10 flex-xs><label>Anexe:</label><input ng-model=vm.registru.anexes.length ng-disabled=true></md-input-container><span flex=5></span><md-input-container flex><label>categorie teren</label><input ng-model=vm.registru.detalii.data.catTeren></md-input-container><md-input-container flex><label>suprafața din contract</label><input ng-model=vm.registru.detalii.data.ha></md-input-container><md-input-container flex><label>suprafața din anexe</label><input ng-model=vm.sumAnexe dz ng-change=vm.calculateDiffHa()></md-input-container><md-input-container flex><label>dif. contract-anexe</label><input ng-model=vm.difHa dz><div md-message ng-show=\\\"vm.difHa != 0\\\" class=red><small>supr.contract # supr.anexe!</small></div></md-input-container></md-card><md-card layout=row flex class=\\\"md-padding md-whiteframe-z1\\\"><md-input-container flex><label>pretul contractului</label><input ng-model=vm.registru.detalii.data.pret></md-input-container></md-card><md-card layout=column flex class=\\\"md-padding md-whiteframe-z1\\\"><!--                            <md-input-container flex>--><label>Explicații</label><textarea ui-tinymce ng-model=vm.registru.detalii.data.explicatii ng-change=vm.submitDetalii(vm.registru.detalii)></textarea><!--                            </md-input-container>--></md-card></div></form>\");\n$templateCache.put(\"app/states/document/main.contract.header.html\",\"<md-toolbar class=\\\"md-accent md-hue-0\\\" style=\\\"opacity: 0.5; margin:0; padding:0;min-height:40px\\\"><div class=md-toolbar-tools style=height:40px><h5>CONTRACT</h5></div></md-toolbar><div class=md-padding layout=column flex><section layout=row flex=100 layout-align=\\\"start start\\\"><md-input-container flex-gt-sm=30><label>Numărul</label><input ng-model=vm.registru.nr required></md-input-container><!--                    <span show-gt-sm flex=\\\"5\\\"></span>--> <span show-xs flex=10></span><md-input-container flex-gt-sm=33><label>Data</label><md-datepicker ng-model=vm.registru.data md-hide-icons=calendar></md-datepicker></md-input-container><span show-gt-sm flex=end></span></section></div>\");\n$templateCache.put(\"app/states/document/main.contract.html\",\"<div layout-gt-sm=row flex><section layout-gt-sm=column layout-xs=column flex=100 flex-gt-sm=70><md-tabs md-border-bottom md-stretch-tabs=none flex md-dynamic-height><md-tab label=PĂRȚI><md-content layout-xs=column layout-gt-sm=column flex=100><!--        heading--><!--                    <md-card flex ng-include = \\\"\\'app/states/document/main.contract.header.html\\'\\\"></md-card>--><!--        end heading--><!--       ARENDATORI--><md-card flex ng-include=\\\"\\'app/states/document/main.contract.ardt.html\\'\\\"></md-card><!--        ARENDASI--><md-card flex ng-include=\\\"\\'app/states/document/main.contract.ards.html\\'\\\"></md-card></md-content></md-tab><md-tab label=CLAUZE><div layout=column flex ng-include=\\\"\\'app/states/document/main.contract.detalii.html\\'\\\"></div></md-tab><md-tab label=ANEXE><md-content layout=row flex=100><md-content layout=column flex=100 ng-include=\\\"\\'app/states/document/main.contract.anexe.html\\'\\\" style=\\\"overflow: hidden\\\"></md-content></md-content></md-tab><md-tab label=\\\"CONȚINUT TEXT\\\"><md-content layout=row flex=100><md-content layout=column flex=100 ng-include=\\\"\\'app/states/document/main.contract.continut.html\\'\\\" style=\\\"overflow: hidden\\\"></md-content></md-content></md-tab><!--            <md-tab label=\\\"ISTORIC\\\">\\r\\n               <md-card layout=\\\"column\\\" flex class = \\\"md-padding\\\" ng-include = \\\"\\'app/states/document/main.contract.istoric.html\\'\\\"></md-card>\\r\\n            </md-tab>  --></md-tabs></section><div flex><div layout=column flex=100 ng-include=\\\"\\'app/states/document/main.contract.istoric.html\\'\\\"></div></div></div>\");\n$templateCache.put(\"app/states/document/main.contract.istoric.html\",\"<div show-gt-sm hide-xs style=margin-top:20px>&nbsp;</div><md-card layout=column flex=100><md-toolbar class=\\\"md-accent md-hue-0\\\" style=\\\"opacity: 0.5; margin:0; padding:0;min-height:40px\\\"><div class=md-toolbar-tools style=height:40px layout-align=\\\"center center\\\"><h5>ISTORIC</h5></div></md-toolbar><md-list><span ng-show=\\\"vm.registru.parent == 0\\\"><md-list-item><div layout=row flex ui-sref=\\\"index.document({id: vm.registru.id })\\\"><span flex=20><small>{{vm.registru.data|date:\\'dd.MM.yyyy\\'}}</small></span> <span flex=10><small>{{vm.registru.nr}}</small></span> <span flex=end><small>incheiat {{vm.registru.set_tipdoc.name}}</small></span></div></md-list-item><md-list-item ng-repeat=\\\"act in vm.registru.childrenData.rows\\\" ui-sref=index.document({id:act.id})><span flex=20><small>{{act.date|date:\\'dd.MM.yyyy\\'}}</small></span> <span flex=10><small>{{act.nr}}</small></span> <span flex=end><small>incheiat {{act.set_tipdoc.name}}</small></span></md-list-item></span></md-list><!--</md-card>--></md-card>\");\n$templateCache.put(\"app/states/document/main.html\",\"<md-progress-circular class=\\\"page-loading md-accent md-hue-2\\\" md-mode=indeterminate md-diameter=70 ng-if=vm.processing></md-progress-circular><md-toolbar class=\\\"md-accent md-hue-1\\\"><div class=md-toolbar-tools><md-button class=md-icon-button><md-icon md-svg-icon=navigation:ic_chevron_left_24px aria-label=Inapoi ui-sref=index.registru></md-icon></md-button><section layout=row flex=100 layout-align=\\\"center center\\\"><small>{{vm.tipDocName}} </small><!--                    &nbsp; nr. {{vm.registru.nr}} / {{vm.registru.data|date:\\\"dd.MM.yyyy\\\"}}--> <span flex=5></span> <span hide-xs><small>nr. </small>&nbsp;</span><md-input-container flex-gt-sm=10><label></label><small><input ng-model=vm.registru.nr required style=\\\"text-align: center\\\"></small></md-input-container><!--                    <span show-gt-sm flex=\\\"5\\\"></span>--><!--                    <span show-xs flex=\\\"10\\\"></span>--> <span hide-xs><small>din data de </small>&nbsp;</span><md-input-container flex-gt-sm=33><label></label><md-datepicker ng-model=vm.registru.data md-hide-icons=calendar></md-datepicker></md-input-container><span show-gt-sm flex=end></span></section><span flex></span><!--        UPDATE CONTRACT  BUTTON--><!--        <md-button   class = \\\"md-icon-button\\\" ng-show = \\\"vm.registru.parent == 0\\\" aria-label = \\\"confirma\\\" ng-click = \\\"vm.updateContract()\\\">\\r\\n            <md-icon md-svg-icon=\\\"navigation:ic_check_24px\\\"></md-icon>\\r\\n        </md-button>--><!--        UPDATE CONEX BUTTON--><!--        <md-button  class = \\\"md-icon-button\\\" ng-show = \\\"vm.registru.parent != 0\\\" aria-label = \\\"confirma\\\" ng-click = \\\"vm.updateConex()\\\">\\r\\n            <md-icon md-svg-icon=\\\"navigation:ic_check_24px\\\"></md-icon>\\r\\n        </md-button>  --></div></md-toolbar><md-content flex layout=row><div flex layout=column><div ng-include=\\\"\\'app/states/document/main.contract.html\\'\\\" ng-if=\\\"vm.registru.parent == 0\\\"></div><div ng-include=\\\"\\'app/states/document/main.conex.html\\'\\\" ng-if=\\\"vm.registru.parent > 0\\\" flex></div><!--    <pre style = \\\"white-space: pre-wrap;\\\">{{vm.registru|json}}</pre>--></div></md-content>\");\n$templateCache.put(\"app/states/exception/template.html\",\"<md-content><md-card md-whiteframe=3><md-card-header><md-card-header-text><div class=md-title>Eroare {{vm.error.code}} - {{vm.error.short}}</div><div class=md-subtitle>{{vm.error.long}}</div></md-card-header-text><md-card-subheader-text class=md-subtitle></md-card-subheader-text></md-card-header><md-card-actions><md-button md-whiteframe=3 style=float:right ui-sref=index.main><md-icon md-svg-icon=action:ic_home_24px></md-icon><md-button-text ng-href=/ ></md-button-text></md-button></md-card-actions></md-card></md-content>\");\n$templateCache.put(\"app/states/login/login.main.html\",\"<div layout=column flex=100 style=\\\"background: none\\\"><md-toolbar class=\\\"md-accent md-hue-2\\\" style=background:navy><div class=md-toolbar-tools layout-align=\\\"center center\\\"><h1 show-gt-sm hide-xs style=\\\"font-weight: 800; font-size: 2em\\\">EVIDENȚĂ CONTRACTE</h1><h1 hide-gt-sm show-xs style=\\\"font-weight: 800; font-size: 1em\\\">EVIDENȚĂ CONTRACTE</h1></div></md-toolbar><div layout=column flex=90 style=\\\"background: url(\\'assets/images/bkg.png\\'); background-repeat: repeat\\\"><div layout=row flex=100 layout-align=\\\"center center\\\"><span ng-include=\\\"\\'app/states/login/login.form.tpl\\'\\\" flex-gt-sm=33></span></div></div><div layout=row style=\\\"background:navy; color:white; font-size:12px; font-weight: 100; padding:5px\\\"><span flex=5></span> <small>&copy; 2017, Maftei Gabriel-Claudiu P.F.A. Arad </small><span flex></span> <small>{{vm.app.version}}</small> <span flex=5></span></div></div>\");\n$templateCache.put(\"app/states/registru/addDocument.form.html\",\"<form name=adddoc flex><md-bottom-sheet><md-card><md-toolbar class=\\\"md-accent md-hue-3\\\"><div class=md-toolbar-tools><h3>ADĂUGARE DOCUMENT NOU</h3><span flex></span><md-button class=md-icon-button ng-click=vm.close() aria-label=inchide><md-icon md-svg-icon=navigation:ic_close_24px></md-icon></md-button></div></md-toolbar><md-card-content class=md-padding><section layout-gt-sm=row layout-xs=column flex=100><md-input-container flex-gt-sm=33 flex-xs=100><label>Tip document</label><md-select ng-model=vm.item.docType ng-change=vm.docTypeChanged(vm.item.docType)><md-option ng-repeat=\\\"o in vm.tipdoc\\\" ng-value=o.id>{{o.name}}</md-option></md-select></md-input-container>{{doctype}} <span show-gt-sm flex=5></span> <span flex-xs=column flex-gt-sm=row layout-align=\\\"center center\\\"><md-input-container flex-gt-sm=50 flex-xs=50><label>Numărul</label><input ng-model=vm.item.nr required></md-input-container><span show-gt-sm flex=5></span><md-input-container flex-gt-sm=50 flex-xs=50><label>Data</label><md-datepicker ng-model=vm.item.data md-hide-icons=calendar></md-datepicker></md-input-container><span flex></span> </span><!--                    pentru contractul--><md-input-container ng-if=vm.showParentSelector flex-xs=100 flex-gt-sm=33><label>pentru contractul</label><md-select ng-model=vm.item.parent flex aria-label=\\\"alege parinte\\\"><md-option ng-repeat=\\\"c in vm.contracte\\\" ng-value=c.id>{{c.nr}} / {{c.data*1000|date:\\\"dd.MM.yyyy\\\"}}</md-option></md-select></md-input-container></section><section layout-gt-sm=row layout-xs=column flex-gt-sm=100 layout-align=\\\"center center\\\"><md-button class=\\\"md-warn md-hue-2 md-raised\\\" ng-disabled=adddoc.$invalid aria-label=adauga ng-click=vm.submit(vm.item)><md-icon md-svg-icon=content:ic_add_24px></md-icon>ADAUGĂ</md-button></section></md-card-content></md-card></md-bottom-sheet></form>\");\n$templateCache.put(\"app/states/registru/istoric.tpl.html\",\"<md-dialog flex=90 md-no-ink><md-dialog-header><md-toolbar class=\\\"md-accent md-hue-2\\\"><div class=md-toolbar-tools>Detalii {{vm.item.docTypeLabel}} nr. {{vm.item.nr}} / {{vm.item.data*1000|date:\\\"dd.MM.yyyy\\\"}} <span flex></span><md-button class=md-icon-button ng-click=vm.close()><md-icon md-svg-icon=navigation:ic_close_24px></md-icon></md-button></div></md-toolbar></md-dialog-header><md-dialog-content><md-content flex><!--           <pjson data= \\\"{vm.item}\\\"></pjson>--><div layout-align=\\\"center center\\\" layout=row flex><i><strong>Document aferent contract nr. {{vm.item.nr}} / {{vm.item.data*1000 | date:\\\"dd.MM.yyyy\\\"}}</strong></i></div><section layout-gt-sm=row layout-xs=column><md-card flex><strong>Arendator(i)</strong><md-divider></md-divider><span ng-repeat=\\\"ardt in vm.item.parti | filter: calitate = \\'arendator\\' \\\">{{ardt.data.name}}</span></md-card><md-card flex><strong>Arendas(i)</strong><md-divider></md-divider><span class=md-padding><span ng-repeat=\\\"ardt in vm.item.parti | filter: calitate = \\'arendas\\' \\\">{{ardt.data.name}}</span></span></md-card></section><md-card flex layout=column ng-show=\\\"vm.item.docType > 1\\\"><strong>DETALII</strong><md-divider></md-divider>{{vm.item.detalii.data.text}}</md-card></md-content></md-dialog-content><!--    <md-dialog-actions>\\r\\n        <span flex></span>\\r\\n        <md-button class = \\\"md-raised\\\" ng-click=\\\"vm.close()\\\">INCHIDE</md-button>\\r\\n    </md-dialog-actions>--></md-dialog>\");\n$templateCache.put(\"app/states/registru/main.html\",\"<md-toolbar class=\\\"md-toolbar-tools md-hue-1\\\" layout=row><span layout=row><md-icon md-svg-icon=navigation:ic_arrow_downward_24px ng-click=\\\"list.ordering = -1\\\"></md-icon>&nbsp;&nbsp;<md-icon md-svg-icon=navigation:ic_arrow_upward_24px ng-click=\\\"list.ordering = 0\\\"></md-icon><md-tooltip style=font-size:1.3em>ORDONARE</md-tooltip></span>&nbsp;&nbsp; <span flex ng-hide=vm.searchActive><strong>REGISTRU GENERAL</strong></span><md-input-container flex ng-if=vm.searchActive><input ng-model=vm.searchCriteria placeholder=caută... style=width:100% ng-show=vm.searchActive></md-input-container><!--                filter button--><md-button class=md-icon-button aria-label=search ng-click=vm.filter(true); aria-label=search ng-hide=vm.filterActive><md-icon md-svg-icon=action:ic_search_24px></md-icon><md-tooltip style=font-size:1.3em>FILTRARE AVANSATĂ</md-tooltip></md-button><!--    clear filter    --><md-button class=md-icon-button aria-label=search ng-click=vm.filter(false) aria-label=search ng-hide=!vm.filterActive><md-icon md-svg-icon=content:ic_remove_circle_outline_24px></md-icon><md-tooltip style=font-size:1.3em>ELIMINĂ FILTRELE</md-tooltip></md-button><!--                add new button    --><md-button class=md-icon-button aria-label=add ng-click=vm.add() aria-label=add><md-icon md-svg-icon=content:ic_add_24px></md-icon></md-button></md-toolbar><!--pagination--><!--<md-toolbar class = \\\"md-accent md-hue-1\\\">--><!--     <div class = \\\"md-toolbar-tools\\\">--><div layout=row flex=10 layout-align=\\\"center center\\\"><span flex=5></span> <small>Pagina &nbsp;</small><!--         button FIRST--><md-button class=\\\"md-fab md-mini md-raised\\\" hide-xs ng-click=\\\"vm.pageTick(\\'start\\')\\\"><md-icon md-svg-icon=av:ic_skip_previous_24px></md-icon></md-button><!--         end button FIRST--><!--         button back--><md-button class=\\\"md-fab md-mini md-raised\\\" hide-xs ng-click=\\\"vm.pageTick(\\'prev\\')\\\"><md-icon md-svg-icon=av:ic_fast_rewind_24px></md-icon></md-button><!--         end button back--> <span style=\\\"margin-top: 7px\\\"><small><!--         page selector--><md-select ng-model=selectedpage ng-change=vm.setSelectedPage(selectedpage) style=\\\"text-align: center\\\" aria-label=\\\"selected page\\\"><md-option ng-repeat=\\\"page in vm.pages\\\" ng-value=page ng-selected=\\\"page == vm.selectedPage \\\">{{page.pageNumber}}</md-option></md-select><!--         end page selector--> </small></span><!--         button forward--><md-button class=\\\"md-fab md-mini md-raised\\\" hide-xs ng-click=\\\"vm.pageTick(\\'next\\')\\\"><md-icon md-svg-icon=av:ic_fast_forward_24px></md-icon></md-button><!--         end button forward--><!--         button LAST--><md-button class=\\\"md-fab md-mini md-raised\\\" hide-xs ng-click=\\\"vm.pageTick(\\'end\\')\\\"><md-icon md-svg-icon=av:ic_skip_next_24px></md-icon></md-button><!--         end button LAST--> <small hide-xs>din {{vm.pages.length}} pagini ( total: {{vm.reg.count}} rezultate) </small><!--     <a ng-repeat = \\\"page in vm.pages\\\" ng-click = \\\"vm.setSelectedPage(page)\\\" flex>\\r\\n         <small ng-class = \\\"{\\'bg-red\\': page.default ==true}\\\">\\r\\n         &nbsp;{{page.pageNumber}}&nbsp;\\r\\n         </small>\\r\\n    </a>--> <span flex></span> <small>se afișează&nbsp;&nbsp; </small><small style=margin-top:7px ng-init=\\\"itemsPerPage = 50\\\"><md-select ng-model=itemsPerPage ng-change=vm.changePagination(itemsPerPage) aria-label=\\\"items per page\\\"><md-option ng-repeat=\\\"item in [10,20,50,100,\\'toate\\']\\\" ng-value=item>{{item}}</md-option></md-select></small><small>&nbsp; de elemente pe pagină </small><span flex=5></span></div><!--    </div>--><!--</md-toolbar>--><!--end pagination--><md-content flex><md-list><md-divider></md-divider><md-list-item ng-repeat=\\\"item in vm.reg.rows |orderBy:data:list.ordering |filter:vm.searchCriteria track by $index\\\" ng-if=\\\"!(item.filtered == true)\\\" layout-align=\\\"center start\\\" ui-sref=index.document({id:item.id}) ng-right-click=vm.remove(item)><span style=\\\"margin-top: -7px; margin-right:10px\\\" hide-xs><h1 style=padding:0px><span ng-show=\\\"$index < 9\\\">&nbsp;</span> {{$index+1}}</h1></span><!--    parent--><div layout=column flex ng-show=\\\"item.parent == 0\\\"><div layout=row flex><md-card class=md-whiteframe-z2 flex><div layout=row class=\\\"bg-grey md-padding\\\" flex><strong>{{item.set_tipdoc.name}} {{item.nr}} / {{item.data*1000|date:\\\"dd.MM.yyyy\\\"}}</strong> <span flex></span> <small hide-xs><strong>perioada: </strong>{{item.detalii.data.dataStart*1000|date:\\\"dd.MM.yyyy\\\"}} - {{item.detalii.data.dataEnd*1000|date:\\\"dd.MM.yyyy\\\"}} </small>&nbsp;&nbsp; <small hide-xs><strong>suprafața:</strong> {{item.detalii.data.ha }} ha <strong>pret: </strong>{{item.detalii.data.pret || \\\"nedefint\\\"}} </small>&nbsp;&nbsp;&nbsp;&nbsp;</div><div layout=row hide-xs class=md-padding><div layout=row flex=30 layout-align=\\\"start start\\\"><div><strong>Arendatori: &nbsp; </strong></div><span ng-repeat=\\\"part in item.partis | filter: {calitate:\\'arendator\\'}\\\"><small>{{part.persoane.name}}</small></span></div><div layout=row flex=30 layout-align=\\\"start start\\\"><div><strong>Arendași: &nbsp;</strong></div><span ng-repeat=\\\"part in item.partis | filter: {calitate:\\'arendas\\'}\\\"><small>{{part.persoane.name}}</small></span></div><span flex></span> IN VIGOARE</div></md-card></div></div><!--    children   --><div layout=row flex ng-show=\\\"item.parent > 0\\\"><md-card class=md-whiteframe-z2 flex><div layout=row class=\\\"bg-grey md-padding\\\"><strong>{{item.set_tipdoc.name}} {{item.nr}} / {{item.data*1000|date:\\\"dd.MM.yyyy\\\"}}</strong></div><div layout=row class=md-padding hide-xs><small>document aferent contractului {{item.parentData.nr}} / {{item.parentData.data*1000|date:\\\"dd.MM.yyyy\\\"}}</small></div></md-card></div></md-list-item></md-list><!--    <pjson data = \\\"{{vm.reg}}\\\"></pjson>--></md-content>\");\n$templateCache.put(\"app/states/settings/main.html\",\"<md-content flex><div layout=row flex><div layout=column flex=100 layout-align=\\\"center cente\\\"><div layout=column flex=100><div layout=row layout-align=\\\"center center\\\" flex ng-repeat=\\\"item in vm.settingsMenu\\\"><span flex-gt-sm=10></span><md-card class=\\\"md-whiteframe-z2 md-padding\\\" layout-align=\\\"center center\\\" ui-sref={{item.state}} flex><h1>{{item.name}}</h1></md-card><span flex-gt-sm=10></span></div></div></div></div></md-content>\");\n$templateCache.put(\"app/states/settings-antet/main.html\",\"settings antet\");\n$templateCache.put(\"app/states/settings-other/main.html\",\"settings other\");\n$templateCache.put(\"app/states/settings-tipdoc/main.html\",\"<md-toolbar class=\\\"md-accent md-hue-1\\\"><div class=md-toolbar-tools>Configurare tipuri de documente <span flex></span><md-button ng-click=vm.restoreDefaults()>IMPLICIT</md-button><md-button class=md-icon-button><md-icon md-svg-icon=navigation:ic_check_24px style=\\\"color: #0F0\\\" ng-click=vm.updateAll() aria-label=\\\"update all\\\"></md-icon>></md-button></div></md-toolbar><!--Note: for scrollShrink to work, the toolbar must be a sibling of a md-content element, placed before it.--><div layout=column flex><div layout=row style=\\\"background: #ABCDEF\\\"><span flex=5></span><h5 flex-gt-sm=10 flex-xs=15>Nr.crt</h5><h5 flex-gt-sm=30 flex-xs=30>DENUMIRE</h5><h5 flex-gt-sm=30 hide-xs>DESCRIERE</h5><h5 flex-gt-sm=0 show-xs flex-xs=40>PARINTE</h5><span flex></span><md-button class=md-raised ng-click=vm.tipdoc.push({})>ADAUGĂ</md-button></div><br><md-content flex><div layout=row flex=100 ng-repeat=\\\"item  in vm.tipdoc\\\"><form name=form1 layout-fill><div layout=row flex=100><span flex=5></span><h4 flex-gt-sm=10 flex-xs=20>{{$index+1}}</h4><md-input-container flex-gt-sm=30><label>Denumire</label><input name=den type=text ng-model=item.name required></md-input-container><md-input-container flex-gt-sm=30 flex hide-xs><label>Descriere</label><input name=desc type=text ng-model=item.descriere></md-input-container><!-- show confirm on row elements touched --> <span ng-hide=\\\"form1.$invalid || form1.den.$pristine || !form1.$dirty\\\" ng-show=\\\"form1.$dirty \\\"><md-button class=md-icon-button ng-click=vm.submit(item)><md-icon md-svg-icon=navigation:ic_check_24px style=\\\"color: green\\\" aria-label=checked></md-icon>></md-button></span><!-- end show confirm on row elements touched --> <span flex></span><md-button class=md-icon-button style=margin-top:4px aria-label=sterge ng-click=vm.removeItem(item)><md-icon md-svg-icon=navigation:ic_close_24px style=\\\"color: red\\\"></md-icon></md-button></div></form></div></md-content></div>\");\n$templateCache.put(\"app/states/_main/partials/content.html\",\"<md-content><md-list><span ng-repeat=\\\"item in vm.mainMenu\\\"><md-list-item class=md-2-line style=\\\"background-color:{{item.bkgColor}}; color: {{item.textColor}}\\\" ng-click=vm.toggleChildren($index) ui-sref={{item.state}}><md-icon md-svg-icon={{item.icon}}></md-icon><div class=md-list-item-text><h3>{{item.name}}</h3><p><small>{{item.details}}</small></p><md-divider></md-divider></div></md-list-item><md-list-item ng-if=item.children[0].visibility><div layout-xs=column layout-gt-sm=row flex=100><span ng-repeat=\\\"c in item.children\\\" ui-sref={{c.state}}><md-button style=\\\"width:95%; text-align: left\\\" class=\\\"md-raised md-accent md-hue-2\\\"><md-icon md-svg-icon={{c.icon}}></md-icon>&nbsp; {{c.name}}</md-button></span></div><md-divider></md-divider></md-list-item></span></md-list></md-content>\");\n$templateCache.put(\"app/states/_main/partials/navleft.html\",\"<!--left navigation panel--><!--    <md-sidenav layout=\\\"column\\\"class=\\\"md-sidenav-left md-whiteframe-z5\\\" md-component-id=\\\"left\\\" md-is-locked-open=\\\"$mdMedia(\\'gt-md\\')\\\" style = \\\"height: 100vh\\\">--><md-sidenav layout=column class=\\\"md-sidenav-left md-whiteframe-z5\\\" md-component-id=left style=\\\"height: 100vh\\\"><!--        user info panel--><md-toolbar class=\\\"animate-show md-whiteframe-z3 md-accent md-hue-3\\\" style=margin-top:2px><!-- title --><div class=md-toolbar-tools>{{vm.appName}}</div></md-toolbar><!--        main menu--><md-list><span ng-repeat=\\\"item in vm.leftMenu\\\"><md-list-item class=md-2-line style=\\\"background-color:{{item.bkgColor}}; color: {{item.textColor}}\\\" ng-click=\\\"vm.toggleChildren($index); vm.toggleSidenav(\\'left\\')\\\" ui-sref={{item.state}}><md-icon md-svg-icon={{item.icon}}></md-icon><div class=md-list-item-text><h3>{{item.name}}</h3><p><small>{{item.details}}</small></p><md-divider></md-divider></div></md-list-item></span></md-list></md-sidenav><!--end left navigation panel-->\");\n$templateCache.put(\"app/states/_main/partials/toolbars.html\",\"<md-toolbar class=\\\"md-accent md-hue-3\\\"><!-- title --><div class=md-toolbar-tools><!--        <md-button class=\\\"md-icon-button\\\" ng-click=\\\"vm.toggleSidenav(\\'left\\')\\\" \\r\\n        aria-label=\\\"Menu\\\">\\r\\n            <md-icon md-svg-icon=\\\"navigation:ic_menu_24px\\\" aria-label=\\\"Menu\\\"></md-icon>\\r\\n        </md-button>--><md-button class=md-icon-button ng-if=\\\"vm.currentState && vm.currentState != \\'index.main\\'\\\"><md-icon md-svg-icon=action:ic_home_24px aria-label=Inapoi ui-sref=index.main></md-icon></md-button><span style=\\\"font-weight: 600; font-size:1em\\\">{{vm.title}} </span><span flex></span><md-icon md-svg-icon=social:ic_person_24px></md-icon>&nbsp; <small style=\\\"font-size: 0.7em\\\"><span show-gt-sm hide-xs>{{vm.local.user.surname}} {{vm.local.user.name}} (</span> {{vm.local.user.username}} <span show-gt-sm hide-xs>)</span></small><div layout=row hide-xs layout-align=\\\"center center\\\"><md-button class=\\\"md-raised md-primary md-hue-2 md-padding\\\" ui-sref=\\\"index.addressBook({id:\\'s\\'})\\\"><md-icon md-svg-icon=communication:ic_contact_phone_24px role=img aria-hidden=true hide-xs><md-tooltip md-direction=bottom style=\\\"font-size:1.2em; padding:10px; background: navy\\\">PERSOANE</md-tooltip></md-icon>&nbsp; CONTACTE</md-button><md-button class=\\\"md-raised md-warn md-hue-2\\\" ui-sref=index.registru><md-icon md-svg-icon=maps:ic_local_library_24px role=img aria-hidden=true hide-xs><md-tooltip md-direction=bottom style=\\\"font-size:1.2em; padding:10px; background: navy\\\">REGISTRU</md-tooltip></md-icon>&nbsp; REGISTRU</md-button><md-button class=\\\"md-raised md-accent md-hue-2\\\" ui-sref=logout><md-icon md-svg-icon=action:ic_power_settings_new_24px role=img aria-hidden=true hide-xs><md-tooltip md-direction=bottom style=\\\"font-size:1.2em; padding:10px; background: navy\\\">IEȘIRE</md-tooltip></md-icon>&nbsp; LOGOUT</md-button></div><md-button class=md-icon-button aria-label=\\\"Open Settings\\\" show-xs hide-gt-sm ng-click=vm.showListBottomSheet($event)><md-tooltip md-toolbar-bottom style=\\\"padding:0 10px 25px 10px\\\"><h1>ALTE SETĂRI</h1></md-tooltip><md-icon md-svg-icon=navigation:ic_more_vert_24px aria-label=More></md-icon></md-button></div></md-toolbar>\");\n$templateCache.put(\"app/states/registru/filter/filterModal.html\",\"<md-dialog flex-xs=100 flex-gt-sm=80><md-dialog-header><md-toolbar class=\\\"md-accent md-hue-2\\\"><div class=md-toolbar-tools>REGISTRU - FILTRARE AVANSATĂ <span flex></span><md-button class=md-icon-button ng-click=vm.close()><md-icon md-svg-icon=navigation:ic_close_24px></md-icon></md-button></div></md-toolbar></md-dialog-header><md-dialog-content>{{vm.found}}<form name=filtru form-on-change=vm.preFilter(vm.filtru) layout-fill><section layout=row flex=100 layout-align=\\\"center start\\\"><md-card md-whiteframe=z3 flex class=md-padding ng-class=\\\"{\\'bg-grey\\':vm.filtru.persoane.length == 0}\\\"><span layout=row flex=100 layout-align=\\\"start start\\\"><h4 style=margin-top:28px>Filtru persoane: &nbsp; &nbsp; &nbsp;</h4><!--                    <md-input-container flex>\\r\\n\\r\\n                        <md-select ng-model=\\\"current.contact\\\" flex md-no-float placeholder = \\\"alege...\\\"\\r\\n                           ng-change=\\\"\\r\\n                           vm.filtru.persoane.push( current.contact); \\r\\n                           current.contact = null; \\\" \\r\\n                           placeholder=\\\"alegeti persoane...\\\" aria-label=\\\"persoane\\\">\\r\\n\\r\\n                            <md-option ng-repeat=\\\"p in vm.persoane \\\" ng-value=\\\"p.name\\\">\\r\\n                                <span layout = \\\"row\\\">{{p.name}}\\r\\n\\r\\n                                </span>\\r\\n                             </md-option>\\r\\n                        </md-select>\\r\\n                    <input ng-model = \\\"pers\\\" ng-change = \\\"vm.persLookup(pers)\\\">\\r\\n                     </md-input-container>--><md-autocomplete flex style=\\\"margin-top: 14px\\\" md-autoselect=true placeholder=\\\"alegeti persoana....\\\" md-item-text=item.name md-items=\\\"item in vm.foundPers\\\" md-menu-class=autocomplete-custom-template md-min-length=1 md-delay=200 md-search-text=vm.searchText md-search-text-change=vm.searchTextChange(vm.searchText) md-select-on-match=true md-match-case-insensitive=true md-selected-item-change=vm.selectedItemChange(item) md-selected-item=vm.selectedItem><md-item-template><span class=item-title><span md-highlight-flags=^i md-highlight-text=vm.searchText>{{item.name}}</span></span></md-item-template><md-not-found>NU exista asemnea persoana</md-not-found></md-autocomplete></span><md-chips class=custom-chips ng-model=vm.filtru.persoane readonly md-removable=true ng-show=\\\"vm.filtru.persoane.length != 0\\\"><md-chip-template><strong>{{$chip.name}} &nbsp;</strong></md-chip-template></md-chips><div layout=row layout-align=\\\"end start\\\"><small ng-show=vm.found.persoane>Am gasit {{vm.found.persoane}} dosare</small></div></md-card></section><section layout=row flex=100><md-card md-whiteframe=z3 flex class=md-padding layout=column ng-class=\\\"{\\'bg-grey\\':!vm.filtru.aplica.regDate}\\\"><div layout=row layout-align=\\\"center center\\\"><span style=margin-top:16px><md-checkbox ng-model=vm.filtru.aplica.regDate aria-label=\\\"data registru\\\" ng-change=vm.preFilter(vm.filtru)></md-checkbox></span><span flex=45 layout-align=\\\"center center\\\" layout=row>Inregistrate în intervalul:<md-datepicker ng-model=\\\" vm.filtru.regDateStart\\\" md-max-date=vm.filtru.endDate ng-disabled=!vm.filtru.aplica.regDate aria-label=\\\"data registru\\\" ng-change=vm.preFilter(vm.filtru)></md-datepicker></span><span flex=50 layout-align=\\\"center center\\\" layout=row>și:<md-datepicker ng-model=\\\" vm.filtru.regDateEnd\\\" md--min-date=vm.filtru.endDate ng-disabled=!vm.filtru.aplica.regDate aria-label=\\\"data registru\\\" ng-change=vm.preFilter(vm.filtru)></md-datepicker></span></div><div layout=row layout-align=\\\"end start\\\"><small>Am gasit {{vm.found.date}} dosare</small></div></md-card></section><!--        <section layout=\\\"row\\\" flex=\\\"100\\\">\\r\\n            <md-card md-whiteframe=\\\"z3\\\" flex class=\\\"md-padding\\\" layout=\\\"row\\\" layout-align=\\\"center center\\\" ng-class = \\\"{\\'bg-grey\\':!vm.filtru.aplica.date}\\\">\\r\\n               <span style = \\\"margin-top:16px\\\" >\\r\\n                    <md-checkbox ng-model = \\\"vm.filtru.aplica.date\\\"  aria-label=\\\"data registru\\\"></md-checkbox>\\r\\n                </span>\\r\\n                \\r\\n                <span flex=\\\"50\\\" layout-align=\\\"center center\\\" layout=\\\"row\\\" >\\r\\n                Cu valabilitate la data: \\r\\n                <md-datepicker ng-model = \\\" vm.filtru.dateStart\\\" md-max-date = vm.filtru.endDate ng-disabled = \\\"!vm.filtru.aplica.date\\\">\\r\\n                </md-datepicker>\\r\\n                </span>\\r\\n\\r\\n                <span flex=\\\"50\\\" layout-align=\\\"center center\\\" layout=\\\"row\\\">\\r\\n                Până la data: \\r\\n                <md-datepicker ng-model = \\\" vm.filtru.dateEnd\\\" md--min-date = vm.filtru.endDate ng-disabled = \\\"!vm.filtru.aplica.date\\\">\\r\\n                </md-datepicker>\\r\\n                </span>\\r\\n            </md-card>\\r\\n\\r\\n        </section>--><section layout=row flex=100><md-card md-whiteframe=z4 flex class=md-padding layout=column ng-class=\\\"{\\'bg-grey\\':!vm.filtru.anexe}\\\"><div layout=row layout-align=\\\"center center\\\"><span flex></span> Filtrează după... <span flex></span> <input ng-model=vm.filtru.anexe.tarla placeholder=tarla> <input ng-model=vm.filtru.anexe.parcela placeholder=parcela> <input ng-model=vm.filtru.anexe.bloc_fizic placeholder=\\\"bloc fizic\\\"></div><div layout=row layout-align=\\\"end start\\\"><small ng-show=vm.found.anexe>Am gasit {{vm.found.anexe}} dosare</small></div></md-card></section><section layout=row flex=100><md-card md-whiteframe=z4 flex class=md-padding layout=row layout-align=\\\"center center\\\"><span flex>Arată &nbsp;&nbsp;&nbsp;<md-checkbox ng-model=vm.filtru.status.toate aria-label=\\\"arata filtrul\\\" ng-true-value=true ng-false-value=false ng-checked=true ng-change=\\\"vm.filtru.status.toate ? vm.filtru.status = {toate:true, active:true, reziliate:true, expirate:true}:vm.filtru.status = {toate:false, active:false, reziliate:false, expirate:false}\\\">Toate</md-checkbox>sau doar cele &nbsp;<md-checkbox ng-model=vm.filtru.status.active aria-label=\\\"filtru activ\\\">In vigoare</md-checkbox><md-checkbox ng-model=vm.filtru.status.reziliate aria-label=reziliate>Reziliate</md-checkbox><md-checkbox ng-model=vm.filtru.status.expirate aria-label=expirate>Expirate</md-checkbox></span></md-card></section><!--        <section layout=\\\"row\\\" flex=\\\"100\\\">\\r\\n            <pre>{{vm.filtru|json}}</pre>\\r\\n        </section>--></form></md-dialog-content><md-dialog-actions><md-button class=\\\"md-raised md-warn\\\" ng-click=\\\"vm.filtru = {persoane:[], anexe:{}, aplica:{}}\\\"><md-icon md-svg-icon=content:ic_remove_circle_outline_24px></md-icon>&nbsp; RESETEAZĂ</md-button><md-button class=\\\"md-raised md-accent\\\" ng-click=vm.submit(vm.filtru)><md-icon md-svg-icon=navigation:ic_check_24px></md-icon>&nbsp; APLICĂ</md-button></md-dialog-actions></md-dialog>\");}]);"],"file":"scripts/app-3d1f1dc216.js","sourceRoot":"/source/"}